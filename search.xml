<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>苍穹项目</title>
      <link href="/2025/04/07/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/"/>
      <url>/2025/04/07/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96/</url>
      
        <content type="html"><![CDATA[<h1 id="一、第一天"><a href="#一、第一天" class="headerlink" title="一、第一天"></a>一、第一天</h1><h3 id="md5加密（maven导入版）"><a href="#md5加密（maven导入版）" class="headerlink" title="md5加密（maven导入版）"></a>md5加密（maven导入版）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 导入md5（单程加密，不能复原）</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 使用</span><br><span class="line">        <span class="comment">//将前端的数据进行md5处理再对比</span></span><br><span class="line">        password = <span class="title class_">DigestUtils</span>.<span class="title function_">md5DigestAsHex</span>(password.<span class="title function_">getBytes</span>());</span><br></pre></td></tr></table></figure><h3 id="swagger"><a href="#swagger" class="headerlink" title="swagger"></a>swagger</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 在maven中导入knife4j</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 在config文件中设置相关</span><br><span class="line"></span><br><span class="line">    <span class="number">2.1</span>：设置静态资源映射</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置静态资源映射</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> <span class="variable">registry</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    protected <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span>(<span class="params">ResourceHandlerRegistry registry</span>) &#123;</span><br><span class="line">        log.<span class="title function_">info</span>(<span class="string">&quot;开始静态资源映射&quot;</span>);</span><br><span class="line">        registry.<span class="title function_">addResourceHandler</span>(<span class="string">&quot;/doc.html&quot;</span>).<span class="title function_">addResourceLocations</span>(<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>);</span><br><span class="line">        registry.<span class="title function_">addResourceHandler</span>(<span class="string">&quot;/webjars/**&quot;</span>).<span class="title function_">addResourceLocations</span>(<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="number">2.2</span>：生成接口文档（在启动springboot时间会显示）</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过knife4j生成接口文档</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">Bean</span></span><br><span class="line">    public <span class="title class_">Docket</span> <span class="title function_">docket</span>(<span class="params"></span>) &#123;</span><br><span class="line">        log.<span class="title function_">info</span>(<span class="string">&quot;准备生成接口文档&quot;</span>);</span><br><span class="line">        <span class="title class_">ApiInfo</span> apiInfo = <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .<span class="title function_">title</span>(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">                .<span class="title function_">version</span>(<span class="string">&quot;2.0&quot;</span>)</span><br><span class="line">                .<span class="title function_">description</span>(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">                .<span class="title function_">build</span>();</span><br><span class="line">        <span class="title class_">Docket</span> docket = <span class="keyword">new</span> <span class="title class_">Docket</span>(<span class="title class_">DocumentationType</span>.<span class="property">SWAGGER_2</span>)</span><br><span class="line">                .<span class="title function_">apiInfo</span>(apiInfo)</span><br><span class="line">                .<span class="title function_">select</span>()</span><br><span class="line">                .<span class="title function_">apis</span>(<span class="title class_">RequestHandlerSelectors</span>.<span class="title function_">basePackage</span>(<span class="string">&quot;com.sky.controller&quot;</span>))</span><br><span class="line">                .<span class="title function_">paths</span>(<span class="title class_">PathSelectors</span>.<span class="title function_">any</span>())</span><br><span class="line">                .<span class="title function_">build</span>();</span><br><span class="line">        <span class="keyword">return</span> docket;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">2.3</span>：使用</span><br><span class="line">    在浏览器中打开 <span class="attr">http</span>:<span class="comment">//localhost:8080/doc.html </span></span><br><span class="line">    一般用于后台测试接口</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="swagger的注解-在页面中显示相关注解"><a href="#swagger的注解-在页面中显示相关注解" class="headerlink" title="swagger的注解(在页面中显示相关注解)"></a>swagger的注解(在页面中显示相关注解)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="number">1.</span> @<span class="title class_">Api</span>: 用在类上解释，例如解释<span class="title class_">Controller</span>&lt;h1&gt;</span><br><span class="line">例子：</span><br><span class="line">@<span class="title class_">Api</span>(tags = <span class="string">&quot;员工相关接口&quot;</span>)   <span class="comment">//swagger解释</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> @<span class="title class_">ApiModel</span>: 用在类上，一般解释实体类，如entity,<span class="variable constant_">DTO</span>,<span class="variable constant_">VO</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>@<span class="title class_">ApiModelProperty</span>: 用在属性上，一般用在实体类的具体参数</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>@<span class="title class_">ApiOperation</span>: 用在方法上，如<span class="title class_">Controller</span>的方法即这个方法的接口，说明方法的用途和作用如在</span><br><span class="line">例子：</span><br><span class="line">@<span class="title class_">ApiOperation</span>(value = <span class="string">&quot;员工登录&quot;</span>)   <span class="comment">//说明方法用途的注解，配合Swagger</span></span><br><span class="line">@<span class="title class_">PostMapping</span>(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">public <span class="title class_">Result</span>&lt;<span class="title class_">EmployeeLoginVO</span>&gt; login&#123;&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="二、第二天"><a href="#二、第二天" class="headerlink" title="二、第二天"></a>二、第二天</h1><p><br></p><h3 id="对象属性拷贝"><a href="#对象属性拷贝" class="headerlink" title="对象属性拷贝"></a>对象属性拷贝</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 一般用在新增事件中，前端传来<span class="variable constant_">DTO</span>类型数据，在新增时转为具体实体类</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">    <span class="title class_">Category</span> category = <span class="keyword">new</span> <span class="title class_">Category</span>();</span><br><span class="line">    <span class="comment">//属性拷贝（第一个参数为要拷贝的对象，第二个参数为数据转入对象）</span></span><br><span class="line">    <span class="title class_">BeanUtils</span>.<span class="title function_">copyProperties</span>(categoryDTO, category);</span><br><span class="line">    <span class="comment">//(categoryDTO --&gt; category)</span></span><br></pre></td></tr></table></figure><h3 id="账号已存在情况动态处理"><a href="#账号已存在情况动态处理" class="headerlink" title="账号已存在情况动态处理"></a>账号已存在情况动态处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 一般用在注册账号，若新增账号在数据库中已存在则返回字符串：<span class="string">&quot;zhangsan&quot;</span>（可变，动态） + <span class="string">&quot;用户名已存在&quot;</span>（静态）</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 在全局处理异常时添加</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">    @<span class="title class_">ExceptionHandler</span></span><br><span class="line">    public <span class="title class_">Result</span> <span class="title function_">exceptionHandler</span>(<span class="params">SQLIntegrityConstraintViolationException ex</span>)&#123;</span><br><span class="line">        <span class="comment">//账号已存在</span></span><br><span class="line">        <span class="title class_">String</span> message = ex.<span class="title function_">getMessage</span>();</span><br><span class="line">        <span class="keyword">if</span>(message.<span class="title function_">contains</span>(<span class="string">&quot;Duplicate entry&quot;</span>))&#123;</span><br><span class="line">            <span class="title class_">String</span>[] split = message.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="title class_">String</span> username = split[<span class="number">2</span>];</span><br><span class="line">            <span class="comment">//TODO 改为常量</span></span><br><span class="line">            <span class="title class_">String</span> msg = username + <span class="string">&quot;用户名已存在&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">error</span>(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">error</span>(<span class="title class_">MessageConstant</span>.<span class="property">UNKNOWN_ERROR</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>详细结果<br><img src="/img/苍穹/已存在.png" width="500" height="300"></li></ol><h3 id="拦截器添加id到线程，方便后续使用当前用户id"><a href="#拦截器添加id到线程，方便后续使用当前用户id" class="headerlink" title="拦截器添加id到线程，方便后续使用当前用户id"></a>拦截器添加id到线程，方便后续使用当前用户id</h3><p><br></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 拦截器设置</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jwt令牌校验的拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="title class_">Component</span></span><br><span class="line">@<span class="title class_">Slf4</span>j</span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">JwtTokenAdminInterceptor</span> implements <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">JwtProperties</span> jwtProperties;</span><br><span class="line"></span><br><span class="line">    public boolean <span class="title function_">preHandle</span>(<span class="title class_">HttpServletRequest</span> request, <span class="title class_">HttpServletResponse</span> response, <span class="title class_">Object</span> handler) throws <span class="title class_">Exception</span> &#123;</span><br><span class="line">        <span class="comment">//判断当前拦截到的是Controller的方法还是其他资源</span></span><br><span class="line">        <span class="keyword">if</span> (!(handler <span class="keyword">instanceof</span> <span class="title class_">HandlerMethod</span>)) &#123;</span><br><span class="line">            <span class="comment">//当前拦截到的不是动态方法，直接放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1、从请求头中获取令牌</span></span><br><span class="line">        <span class="title class_">String</span> token = request.<span class="title function_">getHeader</span>(jwtProperties.<span class="title function_">getAdminTokenName</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、校验令牌</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.<span class="title function_">info</span>(<span class="string">&quot;jwt校验:&#123;&#125;&quot;</span>, token);</span><br><span class="line">            <span class="title class_">Claims</span> claims = <span class="title class_">JwtUtil</span>.<span class="title function_">parseJWT</span>(jwtProperties.<span class="title function_">getAdminSecretKey</span>(), token);</span><br><span class="line">            <span class="title class_">Long</span> empId = <span class="title class_">Long</span>.<span class="title function_">valueOf</span>(claims.<span class="title function_">get</span>(<span class="title class_">JwtClaimsConstant</span>.<span class="property">EMP_ID</span>).<span class="title function_">toString</span>());</span><br><span class="line">            log.<span class="title function_">info</span>(<span class="string">&quot;当前员工id：&quot;</span>, empId);</span><br><span class="line">            <span class="comment">//当前登录用户id放入线程</span></span><br><span class="line">            <span class="title class_">BaseContext</span>.<span class="title function_">setCurrentId</span>(empId);</span><br><span class="line">            <span class="comment">//3、通过，放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="title class_">Exception</span> ex) &#123;</span><br><span class="line">            <span class="comment">//4、不通过，响应401状态码</span></span><br><span class="line">            response.<span class="title function_">setStatus</span>(<span class="number">401</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="title class_">BaseContext</span>根据<span class="title class_">ThreadLocal</span>完成（要获取直接调用<span class="title class_">BaseContext</span>.<span class="title function_">getCurrentId</span>()）</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="title class_">ThreadLocal</span>&lt;<span class="title class_">Long</span>&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span>(<span class="params">Long id</span>) &#123;</span><br><span class="line">        threadLocal.<span class="title function_">set</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="title class_">Long</span> <span class="title function_">getCurrentId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.<span class="title function_">get</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        threadLocal.<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="pageHelper进行分页查询"><a href="#pageHelper进行分页查询" class="headerlink" title="pageHelper进行分页查询"></a>pageHelper进行分页查询</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 开启分页功能(需要传入第几页和页面大小的参数)</span><br><span class="line">    <span class="title class_">PageHelper</span>.<span class="title function_">startPage</span>(categoryPageQueryDTO.<span class="title function_">getPage</span>(),categoryPageQueryDTO.<span class="title function_">getPageSize</span>());</span><br><span class="line">    <span class="comment">//下一条sql进行分页，自动加入limit关键字分页</span></span><br><span class="line">    <span class="title class_">Page</span>&lt;<span class="title class_">Category</span>&gt; page = categoryMapper.<span class="title function_">pageQuery</span>(categoryPageQueryDTO);</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> pageHelper根据线程，自动为sql语句添加limit实现分页功能</span><br></pre></td></tr></table></figure><h3 id="前端传入的数据获取"><a href="#前端传入的数据获取" class="headerlink" title="前端传入的数据获取"></a>前端传入的数据获取</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="title class_">Json</span>格式，在controller层通过@requestbody注解获取</span><br><span class="line"></span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">save</span>(<span class="params">@RequestBody CategoryDTO categoryDTO</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="title class_">Path</span>参数，在controller层通过@<span class="title class_">PathVariable</span>注解获取。并且前端axios时<span class="variable constant_">URL</span>是/url/&#123;...&#125;</span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/status/&#123;status&#125;&quot;</span>)</span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">String</span>&gt; <span class="title function_">startOrStop</span>(<span class="params">@PathVariable(<span class="string">&quot;status&quot;</span>) Integer status</span>)&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span> <span class="title class_">Query</span> 参数，直接获取</span><br><span class="line">    public <span class="title class_">Result</span>&lt;<span class="title class_">List</span>&lt;<span class="title class_">Category</span>&gt;&gt; <span class="title function_">list</span>(<span class="params">Integer type</span>)&#123;&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="三、第三天"><a href="#三、第三天" class="headerlink" title="三、第三天"></a>三、第三天</h1><h3 id="自定义注解-实现公共字段填充"><a href="#自定义注解-实现公共字段填充" class="headerlink" title="自定义注解,实现公共字段填充"></a>自定义注解,实现公共字段填充</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 声明注解</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义注解</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="title class_">Target</span>(<span class="title class_">ElementType</span>.<span class="property">METHOD</span>)</span><br><span class="line">@<span class="title class_">Retention</span>(<span class="title class_">RetentionPolicy</span>.<span class="property">RUNTIME</span>)</span><br><span class="line">public @interface <span class="title class_">AutoFill</span> &#123;</span><br><span class="line">    <span class="comment">//数据库操作类型（update，insert）</span></span><br><span class="line">    <span class="title class_">OperationType</span> <span class="title function_">value</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1.2</span> 数据库操作类型，用在上面</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据库操作类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public enum <span class="title class_">OperationType</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable constant_">UPDATE</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable constant_">INSERT</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> 切入面</span><br><span class="line">    <span class="number">2.1</span>： 切入点 </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切入点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">Pointcut</span>(<span class="string">&quot;execution(* com.sky.mapper.*.*(..)) &amp;&amp; @annotation(com.sky.annotation.AutoFill)&quot;</span>)</span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">autoFillPointCut</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">2.2</span>：前置通知,通知中给公共词条进行复制</span><br><span class="line">    @<span class="title class_">Before</span>(<span class="string">&quot;autoFillPointCut()&quot;</span>)</span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">autoFill</span>(<span class="params">JoinPoint joinPoint</span>)&#123;</span><br><span class="line">        log.<span class="title function_">info</span>(<span class="string">&quot;开始给公共词条进行填充&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取当前被拦截方法上的数据库操作类</span></span><br><span class="line">        <span class="title class_">MethodSignature</span> signature = (<span class="title class_">MethodSignature</span>) joinPoint.<span class="title function_">getSignature</span>(); <span class="comment">//方法签名对象</span></span><br><span class="line">        <span class="title class_">AutoFill</span> autoFill = signature.<span class="title function_">getMethod</span>().<span class="title function_">getAnnotation</span>(<span class="title class_">AutoFill</span>.<span class="property">class</span>); <span class="comment">//获取方法上的注解对象</span></span><br><span class="line">        <span class="title class_">OperationType</span> operationType = autoFill.<span class="title function_">value</span>(); <span class="comment">//获取操作类型（insert，update）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取被拦截的参数：实体对象</span></span><br><span class="line">        <span class="title class_">Object</span>[] args = joinPoint.<span class="title function_">getArgs</span>();</span><br><span class="line">        <span class="keyword">if</span>(args == <span class="literal">null</span> || args.<span class="property">length</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Object</span> entity = args[<span class="number">0</span>];    <span class="comment">//约定，自动填充的实体类放在mapper层的第一个参数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//反射赋值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//准备赋值的数据</span></span><br><span class="line">        <span class="title class_">LocalDateTime</span> now = <span class="title class_">LocalDateTime</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="title class_">Long</span> currentId = <span class="title class_">BaseContext</span>.<span class="title function_">getCurrentId</span>();    <span class="comment">//创建者id</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据不同的操作类型，为对应的属性赋值</span></span><br><span class="line">        <span class="comment">//添加操作</span></span><br><span class="line">        <span class="keyword">if</span>(operationType == <span class="title class_">OperationType</span>.<span class="property">INSERT</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="title class_">Method</span> setCreateTime = entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setCreateTime&quot;</span>,<span class="title class_">LocalDateTime</span>.<span class="property">class</span>);</span><br><span class="line">                <span class="title class_">Method</span> setCreateUser = entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setCreateUser&quot;</span>,<span class="title class_">Long</span>.<span class="property">class</span>);</span><br><span class="line">                <span class="title class_">Method</span> setUpdateTime = entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setUpdateTime&quot;</span>,<span class="title class_">LocalDateTime</span>.<span class="property">class</span>);</span><br><span class="line">                <span class="title class_">Method</span> setUpdateUser= entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setUpdateUser&quot;</span>,<span class="title class_">Long</span>.<span class="property">class</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//反射为对象赋值</span></span><br><span class="line">                setCreateTime.<span class="title function_">invoke</span>(entity,now);</span><br><span class="line">                setCreateUser.<span class="title function_">invoke</span>(entity,currentId);</span><br><span class="line">                setUpdateTime.<span class="title function_">invoke</span>(entity,now);</span><br><span class="line">                setUpdateUser.<span class="title function_">invoke</span>(entity,currentId);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="title class_">Exception</span> e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (operationType == <span class="title class_">OperationType</span>.<span class="property">UPDATE</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="title class_">Method</span> setUpdateTime = entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setUpdateTime&quot;</span>,<span class="title class_">LocalDateTime</span>.<span class="property">class</span>);</span><br><span class="line">                <span class="title class_">Method</span> setUpdateUser= entity.<span class="title function_">getClass</span>().<span class="title function_">getDeclaredMethod</span>(<span class="string">&quot;setUpdateUser&quot;</span>,<span class="title class_">Long</span>.<span class="property">class</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//反射为对象赋值</span></span><br><span class="line">                setUpdateTime.<span class="title function_">invoke</span>(entity,now);</span><br><span class="line">                setUpdateUser.<span class="title function_">invoke</span>(entity,currentId);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="title class_">Exception</span> e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> 在mapper中使用</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> <span class="variable">category</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">Insert</span>(<span class="string">&quot;insert into category(type, name, sort, status, create_time, update_time, create_user, update_user)&quot;</span> +</span><br><span class="line">            <span class="string">&quot; VALUES&quot;</span> +</span><br><span class="line">            <span class="string">&quot; (#&#123;type&#125;, #&#123;name&#125;, #&#123;sort&#125;, #&#123;status&#125;, #&#123;createTime&#125;, #&#123;updateTime&#125;, #&#123;createUser&#125;, #&#123;updateUser&#125;)&quot;</span>)</span><br><span class="line">    @<span class="title class_">AutoFill</span>(value = <span class="title class_">OperationType</span>.<span class="property">INSERT</span>)</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">insert</span>(<span class="title class_">Category</span> category);</span><br></pre></td></tr></table></figure><h3 id="阿里云环境变量配置（应该）"><a href="#阿里云环境变量配置（应该）" class="headerlink" title="阿里云环境变量配置（应该）"></a>阿里云环境变量配置（应该）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>配置环境变量</span><br><span class="line">    <span class="number">1.1</span>：开发环境配置（application-dev.<span class="property">yml</span>）</span><br><span class="line">    <span class="attr">alioss</span>:</span><br><span class="line">        <span class="attr">endpoint</span>: oss-cn-hangzhou.<span class="property">aliyuncs</span>.<span class="property">com</span></span><br><span class="line">        access-key-<span class="attr">id</span>: <span class="title class_">LTAI5</span>tQZnPXD6Rik8wCrwqR4</span><br><span class="line">        access-key-<span class="attr">secret</span>: zLNPJPqlZF079cbepAPzlkREWr35u9</span><br><span class="line">        bucket-<span class="attr">name</span>: spike1666cangqiong</span><br><span class="line"></span><br><span class="line">    <span class="number">1.2</span>：application.<span class="property">yml</span></span><br><span class="line">    <span class="attr">alioss</span>:</span><br><span class="line">        <span class="attr">endpoint</span>: $&#123;sky.<span class="property">alioss</span>.<span class="property">endpoint</span>&#125;</span><br><span class="line">        access-key-<span class="attr">id</span>: $&#123;sky.<span class="property">alioss</span>.<span class="property">access</span>-key-id&#125;</span><br><span class="line">        access-key-<span class="attr">secret</span>: $&#123;sky.<span class="property">alioss</span>.<span class="property">access</span>-key-secret&#125;</span><br><span class="line">        bucket-<span class="attr">name</span>: $&#123;sky.<span class="property">alioss</span>.<span class="property">bucket</span>-name&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>配置类创建阿里云上传文件工具</span><br><span class="line">    <span class="number">2.1</span>：configuration</span><br><span class="line">    @<span class="title class_">Slf4</span>j</span><br><span class="line">    @<span class="title class_">Configuration</span></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">OssConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">        @<span class="title class_">Bean</span></span><br><span class="line">        @<span class="title class_">ConditionalOnMissingBean</span></span><br><span class="line">        public <span class="title class_">AliOssUtil</span> <span class="title function_">aliOssUtil</span>(<span class="params">AliOssProperties aliOssProperties</span>)&#123;</span><br><span class="line">            log.<span class="title function_">info</span>(<span class="string">&quot;开始创建阿里云文件上传工具类: &#123;&#125;&quot;</span>,aliOssProperties);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AliOssUtil</span>(aliOssProperties.<span class="title function_">getEndpoint</span>(),</span><br><span class="line">                    aliOssProperties.<span class="title function_">getAccessKeyId</span>(),</span><br><span class="line">                    aliOssProperties.<span class="title function_">getAccessKeySecret</span>(),</span><br><span class="line">                    aliOssProperties.<span class="title function_">getBucketName</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">2.2</span>：properties</span><br><span class="line">    @<span class="title class_">Component</span></span><br><span class="line">    @<span class="title class_">ConfigurationProperties</span>(prefix = <span class="string">&quot;sky.alioss&quot;</span>)     <span class="comment">//自动获取阿里的环境变量</span></span><br><span class="line">    @<span class="title class_">Data</span></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">AliOssProperties</span> &#123;</span><br><span class="line"></span><br><span class="line">        private <span class="title class_">String</span> endpoint;</span><br><span class="line">        private <span class="title class_">String</span> accessKeyId;</span><br><span class="line">        private <span class="title class_">String</span> accessKeySecret;</span><br><span class="line">        private <span class="title class_">String</span> bucketName;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="title class_">CommonController</span>中使用</span><br><span class="line"></span><br><span class="line">@<span class="title class_">RestController</span></span><br><span class="line">@<span class="title class_">RequestMapping</span>(<span class="string">&quot;/admin/common&quot;</span>)</span><br><span class="line">@<span class="title class_">Api</span>(tags = <span class="string">&quot;公共相关接口&quot;</span>)</span><br><span class="line">@<span class="title class_">Slf4</span>j</span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    <span class="title class_">AliOssUtil</span> aliOssUtil;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/upload&quot;</span>)</span><br><span class="line">    @<span class="title class_">ApiOperation</span>(<span class="string">&quot;文件上传&quot;</span>)</span><br><span class="line">    public <span class="title class_">Result</span> <span class="title function_">upload</span>(<span class="params">MultipartFile file</span>)&#123;</span><br><span class="line">        log.<span class="title function_">info</span>(<span class="string">&quot;文件上传: &#123;&#125;&quot;</span>,file);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//原始文件名</span></span><br><span class="line">            <span class="title class_">String</span> originalFilename = file.<span class="title function_">getOriginalFilename</span>();</span><br><span class="line">            <span class="comment">//后缀</span></span><br><span class="line">            <span class="title class_">String</span> extension = originalFilename.<span class="title function_">substring</span>(originalFilename.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">            <span class="comment">//新文件名</span></span><br><span class="line">            <span class="title class_">String</span> objectName = <span class="variable constant_">UUID</span>.<span class="title function_">randomUUID</span>().<span class="title function_">toString</span>() + extension;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//文件请求路径</span></span><br><span class="line">            <span class="title class_">String</span> filePath = aliOssUtil.<span class="title function_">upload</span>(file.<span class="title function_">getBytes</span>(), objectName);</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Result</span>.<span class="title function_">success</span>(filePath);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="title class_">IOException</span> e) &#123;</span><br><span class="line">            <span class="comment">//TODO常量</span></span><br><span class="line">            log.<span class="title function_">error</span>(<span class="string">&quot;文件上传失败: &#123;&#125;&quot;</span>,e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Mapper主键返回"><a href="#Mapper主键返回" class="headerlink" title="Mapper主键返回"></a>Mapper主键返回</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在<span class="title class_">Mapper</span>.<span class="property">Xml</span>中使用</span><br><span class="line"></span><br><span class="line">    &lt;insert id=<span class="string">&quot;addDish&quot;</span> useGeneratedKeys=<span class="string">&quot;true&quot;</span> keyProperty=<span class="string">&quot;id&quot;</span>&gt;  <span class="comment">//在这里</span></span><br><span class="line">        insert into <span class="title function_">dish</span> (name, category_id, price,image,description,create_time,update_time,create_user,update_user,status)</span><br><span class="line">        <span class="title function_">values</span> (#&#123;name&#125;,#&#123;categoryId&#125;,#&#123;price&#125;,#&#123;image&#125;,#&#123;description&#125;,#&#123;createTime&#125;,#&#123;updateTime&#125;,#&#123;createUser&#125;,#&#123;updateUser&#125;,#&#123;status&#125;)</span><br><span class="line">    &lt;/insert&gt;</span><br></pre></td></tr></table></figure><h3 id="Mapper列表上传减少sql服务器压力"><a href="#Mapper列表上传减少sql服务器压力" class="headerlink" title="Mapper列表上传减少sql服务器压力"></a>Mapper列表上传减少sql服务器压力</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在<span class="title class_">Mapper</span>.<span class="property">Xml</span>中使用</span><br><span class="line"></span><br><span class="line">    &lt;insert id=<span class="string">&quot;addFlavor&quot;</span>&gt;</span><br><span class="line">        insert into <span class="title function_">dish_flavor</span> (dish_id, name, value) <span class="variable constant_">VALUES</span></span><br><span class="line">        &lt;foreach collection=<span class="string">&quot;list&quot;</span> item=<span class="string">&quot;s&quot;</span> separator=<span class="string">&quot;,&quot;</span>&gt;</span><br><span class="line">            (#&#123;s.<span class="property">dishId</span>&#125;,#&#123;s.<span class="property">name</span>&#125;,#&#123;s.<span class="property">value</span>&#125;)</span><br><span class="line">        &lt;/foreach&gt;</span><br><span class="line">    &lt;/insert&gt;</span><br></pre></td></tr></table></figure><h3 id="Mapper逻辑外键查询"><a href="#Mapper逻辑外键查询" class="headerlink" title="Mapper逻辑外键查询"></a>Mapper逻辑外键查询</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">在<span class="title class_">Mapper</span>.<span class="property">Xml</span>中使用</span><br><span class="line"></span><br><span class="line">    &lt;select id=<span class="string">&quot;pageQuery&quot;</span> resultType=<span class="string">&quot;com.sky.vo.DishVO&quot;</span>&gt;</span><br><span class="line">        select d.*, c.<span class="property">name</span> <span class="keyword">as</span> categoryName <span class="keyword">from</span> dish d left outer join category c on d.<span class="property">category_id</span> = c.<span class="property">id</span></span><br><span class="line">        &lt;where&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;categoryId != null and categoryId != &#x27;&#x27;&quot;</span>&gt;</span>         //逻辑外键</span></span><br><span class="line"><span class="language-xml">                and d.category_id = #&#123;categoryId&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span></span><br><span class="line">        &lt;/where&gt;</span><br><span class="line">        order by d.<span class="property">create_time</span> desc</span><br><span class="line">    &lt;/select&gt;</span><br></pre></td></tr></table></figure><h1 id="五、第五天"><a href="#五、第五天" class="headerlink" title="五、第五天"></a>五、第五天</h1><h3 id="SpringDataRedis"><a href="#SpringDataRedis" class="headerlink" title="SpringDataRedis"></a>SpringDataRedis</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> maven导入</span><br><span class="line">    &lt;!--     Spring data Redis           --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> Configration</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@Slf4j</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Bean</span>                              <span class="comment">//注入redis链接工厂</span></span><br><span class="line">        <span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span>&#123;</span><br><span class="line">           <span class="type">RedisTemplate</span> <span class="variable">redisTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">            <span class="comment">//设置redis连接工厂对象</span></span><br><span class="line">            redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">            <span class="comment">//设置redis key序列化器</span></span><br><span class="line">            redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());    <span class="comment">//字符串类型序列化器</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> redisTemplate;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="SpringDataRedis基本用法"><a href="#SpringDataRedis基本用法" class="headerlink" title="SpringDataRedis基本用法"></a>SpringDataRedis基本用法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> 使用RedisTemplate</span><br><span class="line">    <span class="number">3.1</span>: 测试类</span><br><span class="line"><span class="keyword">package</span> com.sky.test;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.DataType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（注释防止内存滥用）</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringDataRedisTest</span> &#123;</span><br><span class="line">    <span class="comment">//包结构一致才能自动注入（com.sky.test）</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRedisTemplate</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(redisTemplate);</span><br><span class="line">        <span class="comment">//五种对象</span></span><br><span class="line">        <span class="type">ListOperations</span> <span class="variable">listOperations</span> <span class="operator">=</span> redisTemplate.opsForList();</span><br><span class="line">        <span class="type">ValueOperations</span> <span class="variable">valueOperations</span> <span class="operator">=</span> redisTemplate.opsForValue();</span><br><span class="line">        <span class="type">HashOperations</span> <span class="variable">hashOperations</span> <span class="operator">=</span> redisTemplate.opsForHash();</span><br><span class="line">        <span class="type">SetOperations</span> <span class="variable">setOperations</span> <span class="operator">=</span> redisTemplate.opsForSet();</span><br><span class="line">        <span class="type">ZSetOperations</span> <span class="variable">zSetOperations</span> <span class="operator">=</span> redisTemplate.opsForZSet();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testString</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//插入 set</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;city&quot;</span>,<span class="string">&quot;背景&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">city</span> <span class="operator">=</span> (String) redisTemplate.opsForValue().get(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">        System.out.println(city);</span><br><span class="line">        <span class="comment">//设置过期时间</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">3</span>, TimeUnit.MINUTES);</span><br><span class="line">        <span class="comment">//不存在则设置</span></span><br><span class="line">        redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>,<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Hash数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  <span class="title function_">testHash</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//操作对象</span></span><br><span class="line">        <span class="type">HashOperations</span> <span class="variable">hashOperations</span> <span class="operator">=</span> redisTemplate.opsForHash();</span><br><span class="line">        <span class="comment">//hset, hget, hdel, hkeys, hvals</span></span><br><span class="line">        hashOperations.put(<span class="string">&quot;100&quot;</span>,<span class="string">&quot;name&quot;</span>,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        hashOperations.put(<span class="string">&quot;100&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;20&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) hashOperations.get(<span class="string">&quot;100&quot;</span>, <span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;name: &quot;</span>+name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有字段</span></span><br><span class="line">        <span class="type">Set</span> <span class="variable">keys</span> <span class="operator">=</span> hashOperations.keys(<span class="string">&quot;100&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;keys: &quot;</span>+keys);</span><br><span class="line">        <span class="comment">//所有value</span></span><br><span class="line">        <span class="type">List</span> <span class="variable">values</span> <span class="operator">=</span> hashOperations.values(<span class="string">&quot;100&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;values: &quot;</span>+values);</span><br><span class="line">        hashOperations.delete(<span class="string">&quot;100&quot;</span>,<span class="string">&quot;age&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列表类型数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//lpush lrange rpop llen</span></span><br><span class="line">        <span class="type">ListOperations</span> <span class="variable">listOperations</span> <span class="operator">=</span> redisTemplate.opsForList();</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        listOperations.leftPushAll(<span class="string">&quot;mylist&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">        listOperations.leftPush(<span class="string">&quot;mylist&quot;</span>,<span class="string">&quot;d&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">List</span> <span class="variable">mylist</span> <span class="operator">=</span> listOperations.range(<span class="string">&quot;mylist&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">        System.out.println(mylist);</span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        listOperations.rightPop(<span class="string">&quot;mylist&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Long</span> <span class="variable">size</span> <span class="operator">=</span> listOperations.size(<span class="string">&quot;mylist&quot;</span>);</span><br><span class="line">        System.out.println(size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 集合数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSet</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//sadd smembers scard sinter sunion srem</span></span><br><span class="line">        <span class="type">SetOperations</span> <span class="variable">setOperations</span> <span class="operator">=</span> redisTemplate.opsForSet();</span><br><span class="line"></span><br><span class="line">        setOperations.add(<span class="string">&quot;set1&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        setOperations.add(<span class="string">&quot;set2&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Set</span> <span class="variable">members</span> <span class="operator">=</span> setOperations.members(<span class="string">&quot;set1&quot;</span>);</span><br><span class="line">        System.out.println(members);</span><br><span class="line"></span><br><span class="line">        <span class="type">Long</span> <span class="variable">size</span> <span class="operator">=</span> setOperations.size(<span class="string">&quot;set1&quot;</span>);</span><br><span class="line">        System.out.println(size);</span><br><span class="line">        <span class="comment">//集合的交集</span></span><br><span class="line">        <span class="type">Set</span> <span class="variable">intersect</span> <span class="operator">=</span> setOperations.intersect(<span class="string">&quot;set1&quot;</span>, <span class="string">&quot;set2&quot;</span>);</span><br><span class="line">        System.out.println(intersect);</span><br><span class="line">        <span class="comment">//并集</span></span><br><span class="line">        <span class="type">Set</span> <span class="variable">union</span> <span class="operator">=</span> setOperations.union(<span class="string">&quot;set1&quot;</span>, <span class="string">&quot;set2&quot;</span>);</span><br><span class="line">        System.out.println(union);</span><br><span class="line">        <span class="comment">//删除元素</span></span><br><span class="line">        setOperations.remove(<span class="string">&quot;set1&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作有序集合类型的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testZset</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//zadd zrange zincrby zrem</span></span><br><span class="line">        <span class="type">ZSetOperations</span> <span class="variable">zSetOperations</span> <span class="operator">=</span> redisTemplate.opsForZSet();</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        zSetOperations.add(<span class="string">&quot;zset1&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        zSetOperations.add(<span class="string">&quot;zset1&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="number">12</span>);</span><br><span class="line">        zSetOperations.add(<span class="string">&quot;zset1&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="number">9</span>);</span><br><span class="line">        <span class="comment">//查询范围内的元素</span></span><br><span class="line">        <span class="type">Set</span> <span class="variable">zset1</span> <span class="operator">=</span> zSetOperations.range(<span class="string">&quot;zset1&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">        System.out.println(zset1);</span><br><span class="line">        <span class="comment">//为元素加指定元素（9+10）</span></span><br><span class="line">        zSetOperations.incrementScore(<span class="string">&quot;zset1&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        zSetOperations.remove(<span class="string">&quot;zset1&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用命令操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCommon</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//keys exists type del</span></span><br><span class="line">        <span class="comment">//获得所有key</span></span><br><span class="line">        <span class="type">Set</span> <span class="variable">keys</span> <span class="operator">=</span> redisTemplate.keys(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        System.out.println(keys);</span><br><span class="line">        <span class="comment">//查询是否存在当前key</span></span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">name</span> <span class="operator">=</span> redisTemplate.hasKey(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">set1</span> <span class="operator">=</span> redisTemplate.hasKey(<span class="string">&quot;set1&quot;</span>);</span><br><span class="line">        <span class="comment">//所有key的类型</span></span><br><span class="line">        <span class="keyword">for</span> (Object key : keys) &#123;</span><br><span class="line">            <span class="type">DataType</span> <span class="variable">type</span> <span class="operator">=</span> redisTemplate.type(key);</span><br><span class="line">            System.out.println(type.name());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//删除指定key</span></span><br><span class="line">        redisTemplate.delete(<span class="string">&quot;mylist&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SpringDataRedis控制层用法"><a href="#SpringDataRedis控制层用法" class="headerlink" title="SpringDataRedis控制层用法"></a>SpringDataRedis控制层用法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 自动导入</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 使用与基本方法相同</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Swagger后端自测分组"><a href="#Swagger后端自测分组" class="headerlink" title="Swagger后端自测分组"></a>Swagger后端自测分组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 客户端接口</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过knife4j生成接口文档</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Docket <span class="title function_">docket</span><span class="params">()</span> &#123;</span><br><span class="line">    log.info(<span class="string">&quot;准备生成接口文档&quot;</span>);</span><br><span class="line">    <span class="type">ApiInfo</span> <span class="variable">apiInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">            .title(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">            .version(<span class="string">&quot;2.0&quot;</span>)</span><br><span class="line">            .description(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="type">Docket</span> <span class="variable">docket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">            .groupName(<span class="string">&quot;客户端接口&quot;</span>)</span><br><span class="line">            .apiInfo(apiInfo)</span><br><span class="line">            .select()</span><br><span class="line">            .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.sky.controller&quot;</span>))</span><br><span class="line">            .paths(PathSelectors.any())</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">return</span> docket;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 用户端接口</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过knife4j生成接口文档</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Docket <span class="title function_">docket1</span><span class="params">()</span> &#123;</span><br><span class="line">    log.info(<span class="string">&quot;准备生成接口文档&quot;</span>);</span><br><span class="line">    <span class="type">ApiInfo</span> <span class="variable">apiInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">            .title(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">            .version(<span class="string">&quot;2.0&quot;</span>)</span><br><span class="line">            .description(<span class="string">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="type">Docket</span> <span class="variable">docket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">            .groupName(<span class="string">&quot;用户端接口&quot;</span>)</span><br><span class="line">            .apiInfo(apiInfo)</span><br><span class="line">            .select()</span><br><span class="line">            .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.sky.controller.user&quot;</span>))</span><br><span class="line">            .paths(PathSelectors.any())</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">return</span> docket;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六-第六天"><a href="#六-第六天" class="headerlink" title="六. 第六天"></a>六. 第六天</h1><h2 id="Java向小程序发送请求（用于获取微信小程序用户的信息）"><a href="#Java向小程序发送请求（用于获取微信小程序用户的信息）" class="headerlink" title="Java向小程序发送请求（用于获取微信小程序用户的信息）"></a>Java向小程序发送请求（用于获取微信小程序用户的信息）</h2><h3 id="1-maven导入（阿里云导入时一并导入）"><a href="#1-maven导入（阿里云导入时一并导入）" class="headerlink" title="1. maven导入（阿里云导入时一并导入）"></a>1. maven导入（阿里云导入时一并导入）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> maven导入（阿里云导入时一并导入）</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.apach.httpcomponets&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="number">4.5</span><span class="number">.13</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="2-工具类创建"><a href="#2-工具类创建" class="headerlink" title="2. 工具类创建"></a>2. 工具类创建</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> 工具类创建</span><br><span class="line"><span class="keyword">package</span> com.sky.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Http工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span>  <span class="type">int</span> <span class="variable">TIMEOUT_MSEC</span> <span class="operator">=</span> <span class="number">5</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送GET方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url,Map&lt;String,String&gt; paramMap)</span>&#123;</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">URIBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URIBuilder</span>(url);</span><br><span class="line">            <span class="keyword">if</span>(paramMap != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (String key : paramMap.keySet()) &#123;</span><br><span class="line">                    builder.addParameter(key,paramMap.get(key));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> builder.build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建GET请求</span></span><br><span class="line">            <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(uri);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//发送请求</span></span><br><span class="line">            response = httpClient.execute(httpGet);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断响应状态</span></span><br><span class="line">            <span class="keyword">if</span>(response.getStatusLine().getStatusCode() == <span class="number">200</span>)&#123;</span><br><span class="line">                result = EntityUtils.toString(response.getEntity(),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">                httpClient.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送POST方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String url, Map&lt;String, String&gt; paramMap)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultString</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建参数列表</span></span><br><span class="line">            <span class="keyword">if</span> (paramMap != <span class="literal">null</span>) &#123;</span><br><span class="line">                List&lt;NameValuePair&gt; paramList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; param : paramMap.entrySet()) &#123;</span><br><span class="line">                    paramList.add(<span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(param.getKey(), param.getValue()));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 模拟表单</span></span><br><span class="line">                <span class="type">UrlEncodedFormEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(paramList);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            httpPost.setConfig(builderRequestConfig());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">            resultString = EntityUtils.toString(response.getEntity(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送POST方式请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramMap</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost4Json</span><span class="params">(String url, Map&lt;String, String&gt; paramMap)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultString</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (paramMap != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//构造json格式数据</span></span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; param : paramMap.entrySet()) &#123;</span><br><span class="line">                    jsonObject.put(param.getKey(),param.getValue());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">StringEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(jsonObject.toString(),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="comment">//设置请求编码</span></span><br><span class="line">                entity.setContentEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="comment">//设置数据类型</span></span><br><span class="line">                entity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            httpPost.setConfig(builderRequestConfig());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">            resultString = EntityUtils.toString(response.getEntity(), <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultString;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig <span class="title function_">builderRequestConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RequestConfig.custom()</span><br><span class="line">                .setConnectTimeout(TIMEOUT_MSEC)</span><br><span class="line">                .setConnectionRequestTimeout(TIMEOUT_MSEC)</span><br><span class="line">                .setSocketTimeout(TIMEOUT_MSEC).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="微信小程序使用案例"><a href="#微信小程序使用案例" class="headerlink" title="微信小程序使用案例"></a>微信小程序使用案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">WX_LOGIN</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/sns/jscode2session&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    WeChatProperties weChatProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">wxlogin</span><span class="params">(UserLoginDTO dto)</span> &#123;</span><br><span class="line">        <span class="comment">//调取接口服务获取当前用户的openid</span></span><br><span class="line">        Map&lt;String , String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;appid&quot;</span>,weChatProperties.getAppid());</span><br><span class="line">        map.put(<span class="string">&quot;secret&quot;</span>,weChatProperties.getSecret());</span><br><span class="line">        map.put(<span class="string">&quot;js_code&quot;</span>,dto.getCode());</span><br><span class="line">        map.put(<span class="string">&quot;grant_type&quot;</span>,<span class="string">&quot;authorization_code&quot;</span>);</span><br><span class="line">        <span class="comment">//http工具类</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> HttpClientUtil.doGet(WX_LOGIN,map);</span><br><span class="line"></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSON.parseObject(json);</span><br><span class="line">        <span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;openid&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断openid是否存在，空则表示登录失败</span></span><br><span class="line">        <span class="keyword">if</span> (openid == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LoginFailedException</span>(MessageConstant.LOGIN_FAILED);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否为新用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.getByOpenid(openid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果是新用户则自动注册</span></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">            user = User.builder()</span><br><span class="line">                    .openid(openid)</span><br><span class="line">                    .createTime(LocalDateTime.now())</span><br><span class="line">                    .build();</span><br><span class="line">            userMapper.insert(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="微信小程序需要导入的配置文件"><a href="#微信小程序需要导入的配置文件" class="headerlink" title="微信小程序需要导入的配置文件"></a>微信小程序需要导入的配置文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 开发配置（dev）</span><br><span class="line">  wechat:</span><br><span class="line">    appid: wxa4efcf2378f09b26</span><br><span class="line">    secret: 2e04cfec4701d51e688ca7d910a3e76e</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 使用配置（jwt配合令牌验证，appid是小程序id）</span><br><span class="line">sky:</span><br><span class="line">  jwt:</span><br><span class="line">    #微信相关配置</span><br><span class="line">    user-secret-key: itheima</span><br><span class="line">    user-token-name: authentication</span><br><span class="line">    user-ttl: <span class="number">7200000</span></span><br><span class="line">  wechat:</span><br><span class="line">    appid: $&#123;sky.wechat.appid&#125;</span><br><span class="line">    secret: $&#123;sky.wechat.secret&#125;</span><br></pre></td></tr></table></figure><h1 id="七-第七天"><a href="#七-第七天" class="headerlink" title="七. 第七天"></a>七. 第七天</h1><h2 id="SpringCatche"><a href="#SpringCatche" class="headerlink" title="SpringCatche"></a>SpringCatche</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> maven导入</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring - boot - starter - cache&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.7</span><span class="number">.3</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 使用方法</span><br><span class="line">    <span class="meta">@EnableCaching</span>开启缓存注解功能，通常加在启动类上（application）</span><br><span class="line">    <span class="meta">@Cacheable</span>在方法执行前先查询缓存中是否有数据，如果有数据，则直接返回缓存数据；如果没有缓存数据，调用方法并将方法返回值放到缓存中</span><br><span class="line">    <span class="meta">@CachePut</span>将方法的返回值放到缓存中</span><br><span class="line">    <span class="meta">@CacheEvict</span>将一条或多条数据从缓存中删除</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 例子（修改菜品删除全部缓存）</span><br><span class="line">    <span class="meta">@CacheEvict(value = &quot;Dish&quot; , allEntries = true)</span>     <span class="comment">//删除全部缓存</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;修改菜品数据回显&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;DishVO&gt; <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">        <span class="type">DishVO</span> <span class="variable">dishVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DishVO</span>();</span><br><span class="line">        dishVO = dishService.getById(id);</span><br><span class="line">        <span class="keyword">return</span> Result.success(dishVO);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="八-第八天"><a href="#八-第八天" class="headerlink" title="八.第八天"></a>八.第八天</h1><h2 id="开启事务注解"><a href="#开启事务注解" class="headerlink" title="开启事务注解"></a>开启事务注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span>  <span class="comment">//开启事务</span></span><br><span class="line">开启事务后，一个数据库操作报错全部返回。</span><br></pre></td></tr></table></figure><h1 id="九-第十天"><a href="#九-第十天" class="headerlink" title="九.第十天"></a>九.第十天</h1><h2 id="spring-task任务调度（订单自动超时）"><a href="#spring-task任务调度（订单自动超时）" class="headerlink" title="spring task任务调度（订单自动超时）"></a>spring task任务调度（订单自动超时）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 加入maven坐标</span><br><span class="line">    ....省略</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 启动类添加注解开启任务调度</span><br><span class="line">    <span class="meta">@EnableScheduling</span>   <span class="comment">//开启任务调度</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 自定义定时任务类（订单超时为例）</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderTaks</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OrderService orderService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OrderMapper orderMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单超时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 * * * * ?&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">processTimeoutOrder</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">time</span> <span class="operator">=</span> LocalDateTime.now().plusMinutes(-<span class="number">15</span>);  <span class="comment">//设置十五分钟超时</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询订单列表(根据状态和时间)</span></span><br><span class="line">        List&lt;Orders&gt; list = orderService.getByStatusAndTimeLt(Orders.PENDING_PAYMENT,time);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (list == <span class="literal">null</span> &amp;&amp; list.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">OrderBusinessException</span>(MessageConstant.ORDER_NOT_FOUND);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Orders o:list) &#123;</span><br><span class="line">            <span class="comment">//更改状态和更新</span></span><br><span class="line">            o.setStatus(Orders.CANCELLED);</span><br><span class="line">            o.setCancelReason(<span class="string">&quot;订单超时，自动取消!&quot;</span>);</span><br><span class="line">            o.setCancelTime(LocalDateTime.now());</span><br><span class="line">            orderMapper.update(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="websocket（来单提醒，双向传播数据）"><a href="#websocket（来单提醒，双向传播数据）" class="headerlink" title="websocket（来单提醒，双向传播数据）"></a>websocket（来单提醒，双向传播数据）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 导入maven坐标</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> WebSocket配置类，用于注册WebSocket的Bean</span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSocketConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Bean</span></span><br><span class="line">        <span class="keyword">public</span> ServerEndpointExporter <span class="title function_">serverEndpointExporter</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServerEndpointExporter</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 是用案例（催单提醒）</span><br><span class="line">    <span class="comment">//约定格式json</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reminder</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="comment">//根据id查询订单</span></span><br><span class="line">        <span class="type">Orders</span> <span class="variable">orders</span> <span class="operator">=</span> orderMapper.findById(id);</span><br><span class="line">        <span class="comment">//订单不存在</span></span><br><span class="line">        <span class="keyword">if</span> (orders == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">OrderBusinessException</span>(MessageConstant.ORDER_NOT_FOUND);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//催单提醒</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="comment">//1表示来单，2表示催单</span></span><br><span class="line">        map.put(<span class="string">&quot;type&quot;</span>,<span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">&quot;orderId&quot;</span>,id);</span><br><span class="line">        map.put(<span class="string">&quot;content&quot;</span>,<span class="string">&quot;订单号：&quot;</span> + orders.getNumber()); <span class="comment">//订单号</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> JSON.toJSONString(map);</span><br><span class="line">        web.sendToAllClient(json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十-第十一天"><a href="#十-第十一天" class="headerlink" title="十. 第十一天"></a>十. 第十一天</h1><h2 id="获取一个时间点这天的最开始和最后时间"><a href="#获取一个时间点这天的最开始和最后时间" class="headerlink" title="获取一个时间点这天的最开始和最后时间"></a>获取一个时间点这天的最开始和最后时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LocalDateTime</span> <span class="variable">beginTime</span> <span class="operator">=</span> LocalDateTime.of(begin, LocalTime.MIN);</span><br><span class="line"><span class="type">LocalDateTime</span> <span class="variable">endTime</span> <span class="operator">=</span> LocalDateTime.of(end, LocalTime.MAX);</span><br></pre></td></tr></table></figure><h2 id="方法引用分割列表"><a href="#方法引用分割列表" class="headerlink" title="方法引用分割列表"></a>方法引用分割列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//销量列表</span></span><br><span class="line">List&lt;GoodsSalesDTO&gt; salesTop10 = orderMapper.getSalesTop10(beginTime, endTime);</span><br><span class="line"><span class="comment">//分割出名字列表</span></span><br><span class="line">List&lt;String&gt; names = salesTop10.stream().map(GoodsSalesDTO::getName).collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="StringUtils列表转为字符串"><a href="#StringUtils列表转为字符串" class="headerlink" title="StringUtils列表转为字符串"></a>StringUtils列表转为字符串</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//名字列表字符串(以,分割)</span></span><br><span class="line"><span class="type">String</span> <span class="variable">nameList</span> <span class="operator">=</span> StringUtils.join(names, <span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="comment">//分割后例子（1，2，3，4）</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue+springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue+springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年玩过的游戏</title>
      <link href="/2025/04/03/game/"/>
      <url>/2025/04/03/game/</url>
      
        <content type="html"><![CDATA[<head>    <title>古诗词集</title>    <style>        body {            font-family: 'SimSun', serif;            line-height: 1.6;            padding: 20px;            font-size: 18px; /* 添加这一行，将字体大小设置为 18px ，你可以根据需要调整数值 */        }    </style></head><h1 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h1><p>昨天晚上在床上躺着，我想我这个博客能写点什么呢。<img src="/img/game/哎.png" width="200" height="200" aline='left' class='left-image'><br>嗯….来写点游戏相关的吧…这是我心中前十的游戏排名🥳🥳</p><p><br><br></p><h1 id="第一名：《塞尔达传说：旷野之息》"><a href="#第一名：《塞尔达传说：旷野之息》" class="headerlink" title="第一名：《塞尔达传说：旷野之息》"></a>第一名：《塞尔达传说：旷野之息》</h1><p><img src="/img/game/塞尔达.jpg" width="800" height="500"></p><p>有时候真是不得不说，就是为了醋包了这顿饺子😁就像买ns就是为了塞尔达。<br><br>《塞尔达传说：旷野之息》，在我有开这个文章的想法的时候就在我的脑中内定了第一。最开始了解到塞尔达这个ip就是因为野炊这部作品。虽然ns的画质真的很烂但我最开始被野炊吸引的点却是它的美术风格。<br><br>我很喜欢在野炊的平原上听风吹拂草地的风声以及看着风吹过草地，草原微微弯曲的感觉。加上野炊对大世界的渲染，让我在玩游戏的时候感觉我就是在海拉鲁大陆的link。<br><br>说起野炊，真的不得不吹一下野炊对大世界这个玩法的渲染，在玩了这么多大世界游戏中我是觉得野炊的大世界是一个真的活着的世界。在不同时间段你去做同一件事是不同的进展和方式。<br><br>野炊的弱引导是它这部作品的核心，你可以漫无目的的探索海拉鲁大陆，但当你慢慢玩着你会发现原来你的主线已经快到结尾了。不同于其他游戏强制性的支线主线，地图上密密麻麻的任务点，野炊的核心就是探索，它不会告诉你该怎么玩游戏他只是构建了个世界，你可以按你喜欢的方式去玩。爬上塔自然是看周围是什么，遇到断桥自然是和npc一样砍树搭桥，冷了自然是点燃旁边的燃尽的篝火堆。为什么会有燃尽的篝火堆，为什么会有npc在砍树……没错，这就是野炊的引导，让你不再只是玩游戏。<br><br><br>再说一句，傻逼switch2，傻逼任天堂😒😒</p><h3 id="更新中"><a href="#更新中" class="headerlink" title="更新中"></a>更新中</h3>]]></content>
      
      
      <categories>
          
          <category> game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于spike1666.top</title>
      <link href="/2025/04/02/%E4%BB%8B%E7%BB%8D/"/>
      <url>/2025/04/02/%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<head>    <title>古诗词集</title>    <style>        body {            font-family: 'SimSun', serif;            line-height: 1.6;            padding: 20px;            font-size: 18px; /* 添加这一行，将字体大小设置为 18px ，你可以根据需要调整数值 */        }    </style></head><h1 id="这是什么"><a href="#这是什么" class="headerlink" title="这是什么"></a>这是什么</h1><ol><li>嗯，如你所见，这是我用各种轮子搭建的一个关于自己的博客。其实我本来是想写一个手绘风格日记的网站来记录我自己想写的事情，但是看到了这个博客框架。所以选择了博客来记录。</li></ol><h1 id="关于这个网站"><a href="#关于这个网站" class="headerlink" title="关于这个网站"></a>关于这个网站</h1><ol><li><p>推荐使用电脑访问：因为很多插件在移动端是显示不出来的。提醒移动端，页面移动时右上角的三横杠符号是菜单选项，旁边的圆圈则是随机选择一篇文章进行访问。</p></li><li><p>推荐夜间模式：因为夜间模式的星火特效好看，白天的雪花特效不是很明显。手机端无所谓了，不仔细看的话根本看不出有特效。😅😅</p></li><li><p>如果画面中间有头像在闪烁或者上方有彩色进度条则表示页面在加载中，因为是vercel部署，速度可能会有点慢。</p></li><li><p>有时候会出现页面跳转重新加载静态事件，嗯….是因为pjax实在是太难调试了可能又是哪来了个报错，不过还是那句话，“能跑就行”🤣。（因为报错我都想禁用F12防止你们看到了😑）</p></li><li><p>电脑鼠标右键进入全屏模式</p></li></ol><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ol><li>这个网站主要目的是写文章，应该也不会更新其他部分了。<br></li><li>日记的密码你们可以猜猜，我是不会说的，猜出来给你看🤣🤣。<br></li><li>其实本来是想着自己本地玩玩没想着部署到网上的，但是我看阿里云注册一个域名这么便宜就想着搞一个玩玩。</li><li>欢迎大家来看看，随意留言（给我刷刷观看量🥰🥰）.<br></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo开发</title>
      <link href="/2025/03/31/hexo/"/>
      <url>/2025/03/31/hexo/</url>
      
        <content type="html"><![CDATA[<figure class="highlight markdown"><div class="highlight-tools "><div class="macStyle"><div class="mac-close"></div><div class="mac-minimize"></div><div class="mac-maximize"></div></div><i class="fas fa-angle-down expand"></i><div class="code-lang">markdown</div><div class="copy-notice"></div><i class="fas fa-paste copy-button"></i><i class="fa-solid fa-up-right-and-down-left-from-center fullpage-button"></i></div><div class="code-expand-btn expand-done"><i class="fas fa-angle-double-down"></i></div><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">random:</span><br><span class="line">limit:</span><br><span class="line">  type:</span><br><span class="line"><span class="section">  value:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></tbody></table></figure><p><br><br><br><br><br></p><div class="table-wrap"><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示 mathjax (当设置 mathjax 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true/false) (默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>random</td><td>【可选】配置友情链接是否随机排序（默认为 false）</td></tr><tr><td>limit</td><td>【可选】配置説説显示数量</td></tr><tr><td>limit.type</td><td>【可选】配置説説显示数量的类型 （date 或者 num）</td></tr><tr><td>limit.value</td><td>【可选】配置説説显示数量的值</td></tr></tbody></table></div><p>作者: Jerry<br>連結: <a href="https://butterfly.js.org/posts/dc584b87/">https://butterfly.js.org/posts/dc584b87/</a><br>來源: Butterfly<br>版權屬於作者所有。商業用途請聯絡作者獲得授權，非商業用途請註明出處。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蛊真人</title>
      <link href="/2025/03/31/%E8%9B%8A%E7%9C%9F%E4%BA%BA%E8%AF%97%E8%AF%8D/"/>
      <url>/2025/03/31/%E8%9B%8A%E7%9C%9F%E4%BA%BA%E8%AF%97%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p><span style="font-size: 44px;"><br><img src="\img\蛊真人.png" alt="蛊真人"></p><h1 id="《忆秦娥・娄山关》"><a href="#《忆秦娥・娄山关》" class="headerlink" title="《忆秦娥・娄山关》"></a>《忆秦娥・娄山关》</h1><p><strong>雄关漫道真如铁，而今迈步从头越。</strong><br><strong>雨打风吹几重重，不敌一口浊酒液。</strong></p><h1 id="《临江仙・滚滚长江东逝水》"><a href="#《临江仙・滚滚长江东逝水》" class="headerlink" title="《临江仙・滚滚长江东逝水》"></a>《临江仙・滚滚长江东逝水》</h1><p><strong>朝如青丝暮成雪，是非成败转头空。</strong></p><h1 id="《行行重行行》"><a href="#《行行重行行》" class="headerlink" title="《行行重行行》"></a>《行行重行行》</h1><p><strong>仙路阻且长，岁月忽已晚。</strong><br><strong>情仇已绵长，君思仙尽头，我思君安危。</strong><br><strong>生死两茫茫，为君梦还乡。</strong></p><h1 id="《满江红・小住京华》"><a href="#《满江红・小住京华》" class="headerlink" title="《满江红・小住京华》"></a>《满江红・小住京华》</h1><p><strong>凡夫俗子岂识我，非到末路不甘休！</strong></p><h1 id="《感遇》"><a href="#《感遇》" class="headerlink" title="《感遇》"></a>《感遇》</h1><p><strong>一生不利己，忧济在元元。</strong><br><strong>捐躯赴难死，星光照人间。</strong><br><strong>重活物人非，五洲大不同。</strong><br><strong>丹心唯一一，三相挽天倾！</strong></p><h1 id="古月方源被正道围攻时吟诗"><a href="#古月方源被正道围攻时吟诗" class="headerlink" title="古月方源被正道围攻时吟诗"></a>古月方源被正道围攻时吟诗</h1><p><strong>朝如青丝暮成雪，是非成败转头空。</strong></p><h1 id="《古月方源被白凝冰与铁若男合谋擒获后吟诗》"><a href="#《古月方源被白凝冰与铁若男合谋擒获后吟诗》" class="headerlink" title="《古月方源被白凝冰与铁若男合谋擒获后吟诗》"></a>《古月方源被白凝冰与铁若男合谋擒获后吟诗》</h1><p><strong>看万山红遍，层林尽染；漫江碧透，百舸争流。</strong><br><strong>鹰击长空，鱼翔浅底，万类霜天竞自由。</strong><br><strong>怅寥廓，问苍茫大地，谁主沉浮？</strong></p><h1 id="古月方源炼出定仙游后吟诗"><a href="#古月方源炼出定仙游后吟诗" class="headerlink" title="古月方源炼出定仙游后吟诗"></a>古月方源炼出定仙游后吟诗</h1><p><strong>千古地仙随风逝，昔日三王归青冢。</strong><br><strong>阳莽憾陨谁无败？卷土重来再称王。</strong><br><strong>天河一挂淘龙鱼，逆天独行顾八荒。</strong><br><strong>今日暂且展翼去，明朝登仙笞凤凰！</strong></p><h1 id="古月方源易容假扮武遗海参加斗诗晚会吟诗"><a href="#古月方源易容假扮武遗海参加斗诗晚会吟诗" class="headerlink" title="古月方源易容假扮武遗海参加斗诗晚会吟诗"></a>古月方源易容假扮武遗海参加斗诗晚会吟诗</h1><p><strong>大海啊，你全是水。</strong><br><strong>骏马啊，你四条腿。</strong><br><strong>美人啊，你有大大的眼睛，还有一张嘴！</strong></p><h1 id="古月方源九转成尊后吟诗"><a href="#古月方源九转成尊后吟诗" class="headerlink" title="古月方源九转成尊后吟诗"></a>古月方源九转成尊后吟诗</h1><p><strong>早岁已知世事艰，仍许飞鸿荡云间。</strong><br><strong>一路寒风身如絮，命海沉浮客独行。</strong><br><strong>千磨万击心铸铁，殚精竭虑铸一剑。</strong><br><strong>今朝剑指叠云处，炼蛊炼人还炼天！</strong></p><h1 id="白凝冰吟诗"><a href="#白凝冰吟诗" class="headerlink" title="白凝冰吟诗"></a>白凝冰吟诗</h1><p><strong>万丈红尘缤纷彩，天涯云水路遥长。</strong><br><strong>此刻风流归天地，不胜水中明月光。</strong></p><h1 id="气绝魔仙吟诗"><a href="#气绝魔仙吟诗" class="headerlink" title="气绝魔仙吟诗"></a>气绝魔仙吟诗</h1><p><strong>登山寻仙处，寸步间高险。</strong><br><strong>浮尘似光流，暗蛊藏心沟。</strong><br><strong>金玉如一梦，万年恨寂寥。</strong><br><strong>五域九天功，尽在一气中。</strong></p><h1 id="武庸吟诗"><a href="#武庸吟诗" class="headerlink" title="武庸吟诗"></a>武庸吟诗</h1><p><strong>永生缥缈非我求，长生无为老愧羞。</strong><br><strong>界壁消散乱世起，宿命一去竞自由。</strong><br><strong>鹰击长空鲸霸海，不试怎知龙与蚯。</strong><br><strong>凡夫俗子岂识我，非到末路不甘休！</strong></p><h1 id="梦求真吟诗"><a href="#梦求真吟诗" class="headerlink" title="梦求真吟诗"></a>梦求真吟诗</h1><p><strong>梦里轻烟天外客，夜夜梦中唤心魂。</strong><br><strong>纵是百年无缘分，解脱俗尘梦纯真。</strong></p><h1 id="青仇吟诗"><a href="#青仇吟诗" class="headerlink" title="青仇吟诗"></a>青仇吟诗</h1><p><strong>十万悠悠恨不休，粉身碎骨杀敌酋。</strong><br><strong>神帝城中再睁眼，因果树下有青仇。</strong></p><h1 id="无极魔尊吟诗"><a href="#无极魔尊吟诗" class="headerlink" title="无极魔尊吟诗"></a>无极魔尊吟诗</h1><p><strong>从来是疯魔道痴，俯仰问阴阳乾坤。</strong><br><strong>百万年筹谋积蓄，待今朝无极永生！</strong></p><div align=center class="aspect-ratio"><iframe src="https://www.bilibili.com/video/BV1ub19YXErV/?spm_id_from=333.337.search-card.all.click&vd_source=8fb2b06ae8044f727fa547035de27079"scrolling="no"border="0"frameborder="no"framespacing="0"high_quality=1danmaku=1allowfullscreen="true"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桂林三月三</title>
      <link href="/2025/03/30/%E4%B8%89%E6%9C%88%E4%B8%89/"/>
      <url>/2025/03/30/%E4%B8%89%E6%9C%88%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="03493616c75e31750d429e452cea57e9cd9061a33f6cf7ff3d680719d09a8049">729c507bcdf22e80dd889ffdee790671fcfc82e6592c115e4dc54fa1891646fd1f6eb8f06657768004da240fe253e213dce99b80239aec77e22e59066732069f8bda98beddfcafe6f90029a5d39503eaf3390cef8399c19636815e0ff4d0e84a23a6c6f078c77d83c327021192ea86021b62ea36e2464c0d931c7db4ef5249bc2d336e85ae012f4965064444f67be2e311966cefc3c0c2d0b16c9d719516d800150cb4c94adee217cdd85073ed60a0cbcc135daf31f9a434520a92f244aae60172eef4210e7918a2aeadcd50cd95de1b9b7f22de82733827b342c51f612dfc96dbf1658d341a7b0222821425e6ee8bc3359fb6ff3084cc06d258c8771926b8ae95c51eb2f3a6eb8648c4e67109d9a0329d97297770ee93999eeb7a17965d4201d12b02c5173005cea010f9e64023acb41f8f1cdea61ea0625e41c3503de2ecb588bdfdb77199d179f58f6fb334cf8ace81e3cfe7b328117d7aaf5f92c19367e54abdf40f0bed5d656495869c20c5a8c16d7fcb7de116a3b57d9bb988c300e5e77fd25332dd2fcfbfbe3ec9661274044a57605ff00ebc5e647360ed2b16ba4cfba127529713d422b21f99cae26133ae6a2faebce01d55f3215a8028d51f4a4f6cbb47173f25634d641e0fe4229e15387581d1ddaa847be8c1d48e2cf78f54eada88eda7d0b02b0116b288551e82875ab1d2bcc4093556b86be1c5bbbab75037b2eb4d3f6fe1c2a7fc19d5d39e8b3870d63f8b08026fdfb1f3df4e8385f19807eb57e54f925be8bff63ac9bd0e7c0a15f1cc79210f551b59d61c7ec19860eea1c9245cde0b1cb65a268c24f6e08143bad9fbb7d12eaebfdcd0ad9c87a12a576349b2558301f8848e57f1b1d398dc3f6d1b5507202c9e6fc2da71296b497e1f2905860c01586460f870f5e4a9345d1a1e45ef1dca69b7e3428fcb99e4fbddad25ef43daa34bab492e76e20f22188eae32d29add4a1a86390fb76e08324cdc0001b8e434367b62b9738fbefcb128e39ba1ffb958d724a661979feef6d6c8fef96125e29d28f4ed825224d46928b72bbe3af949a2dae43f0055a70c9f3a21b3300c3f275e1305e6d2cd90bde3d99d0f435af918f83ab344f73e24e94c699f1877b95af9869571eaf8f2b91fcbc40519d91a1d7501da6f295195abe832a6f9c32d532c36693bfd4e93064325a6c570f2e9d015fb900fc28b2c5634d9c451d2b0f9ad02001ca80af6775dc9c0f40e4b07bad56e2653109b4ef3c38dbda77532c3dfdd0a3630f2f97d6915b62ce812fe3c1c21590229857b3037d20b9bce63b1ac00e157d4aa4bf988413ea584dc419f14eea73ce00ac683a5a1b56ca5cabbe8c57f241d6734ffe407a193ce3ed2dc9f8a7c04ca96dc202424498808c0ea8a15fa12a640f8a954fed80ca12223f38df30aaa5d9658f23222d9411b7095818b26fd7c0aab3abd3c172095ab7a5141019bb60e24b133f693dd9a3aab55f1bdf077b6441a039f5c5bfab7c3040b4f4018e7efc25e305468237dbbe8d3e3dab93f8d405549f75ff4e8f577ce105e1e57d1aa95f1c9e0594bd26e0ad3504a5f674ff3a93a16b0fff16aca075bacbce7cd0b5c3c0b98012844fbd089a93c3d303be8105ab2a6a909922026bbe2571868828e546f33d3fed3a7174cd4e26c8fb0c06c4ff206d44942d2bdfe92b715dd6458c975589c72fc01d880ae475bbad37e26105f7a655ac73c62696034756bf51eb040b240c81afbcce504a83a38aba713530a891a55b77de8efd03df6a8bff08dda3829d26157a8d70d99e0fdbc1a3e9f926e765efeaeb35d036be854d23142fca6fef2504220a79dbe06a862d63fc9765c19a461b4d5152bd53e458fcc83a262e936a546823c7b65a3e837d5a74ce6d27c67de6afc1bf395d131a32a786b631ce7f00e7f08bf22264ade8d2d9bcf3f5fdd90655162657d38c6f49775aba99b3241dfa1f4d8c1d3cdbd345eafa0d9887b8f5070b3d001a094c2239695b0f0fdd8d99ff96df4eb84d72c4a005fb3aca902143511b00291914b32fcda9d988eb83dcb9c7a8b8a4e1555b519b2c2e431419d6b561f0e539ee17bc8a33c9ab41209b22b5d828e0a3c4c59721ff8903fcf5e26d55972d03ae74ee6fb7e7808e77e1e1c23df5a363cf628252df9155a95a6d89057ed0e403d637a08e28a9a60d9c24bcdac656f6bbc2262ad14839dfa2fd761b55d66e5db36aec26b7d51540a1bc5838d42d84945a5004571c4fd7d0f1d44f77cfc4413e1eb62c5bf8309f30dea4fd197cdcaf5deab1d00214cbf647826b4d4c0fb14ddf0c51ac57779fafeb8785209e4de14b8b1c052976e74ddeba710f6f8ea67300d18d379bf146f28517700b5fde93164a56ee6822000a4f4a179ba5e792e20224d0ae943f3be85f7e753e2d36675a68bbacea3389be7cdfe57e6ef188772e4586dff515e898e3fb60a3524befcaab22d0d860a52ef5972bad8dbbd1fc74e1be06573dbbfe4dc5fe66d0c1e1dedad3fedd60425a2502ce1b27aad0cce9899fa5d6bb3aae0738d8f454015f5de7cd560d629a578c2a3b14c5b2726c0bccea9bcb52f3e55d303b69de3ec98cbfb2aeda2c28afe2e8d94e8baf84aac25ead546ab10d94a0fcd7fdb408829377fd352e7aa745b7a38427aea88bcbfc3f890542128a2955135ac3aa6f3e4495bd77c6e28ed9a2a5ac4289c72afd4e847baf9820ff15e405dd2aaa30de62c98ecca56150597674a7c87ae7a084de0030bc0cb51a63073c4e7e1efb840c95f8040543a94c32df7e7c6ef96a0b46537274467d75050a37843079e8b57052ce06a1ef448ed173702769d769a5aae414b052b732d34fdae9e5fda7cb53e2f764ac3b2be4344b4d36b51e266dc070914adb52df3d1332804b0c5b10ec8f73db25144223f99e8aed5ca82985a66a9c89a3f479598bc47eed865205efe0fa8ee3d0ef93e4974bd8aef5dd0d178d0ed6cbd1a8fbf0de0c7521df0d837d52b3d6b6b22f4526429321cbd87eb025ea3fcbba6db570f5087e0c3754547e4e792fc5e463f3a42be3e219ceddbfd4660d9ae52864a5ff8d27f742154b9a8db414311f8afd8976bda854eda262868f3c50a24841b1304b422b74856e6b237a3232de5904b72d306582b4682aa9c676b796c6d077778b4f3db40bc08ee72932cad96f8559514b7f04a239a00b8906c6513c29aa57b0e33e58542f0eb4d81170b44d1e1da8ecc107f0cf4099d35640c7b70a446e9afff707cdf4f0a798771028fe91df21a04a25e52372ca152a0551130b39b1b9aa42ca08f53a29a3c3f8d40c647215395b347a3651e3e7f79b4150fe157bee739918504a670f923ee9037c50a9f246942c8dd75e55d5d79879808addc896b5653e5741ae3a2d1c62dba9f948c582a720e146b8625b958d8bcb641fcc61a975a8e0e3ea6c9bcaf4f9ca3c9b699fa12dbd878b6e792c7c313944bdb93ba7ae55ff566bbd135d315a08a7ae07fd4fd4f630bae27fd56bacadbed57219563ff04aa79f192b2373f09181bd922098b531928f3fc556402b6384940fe8c32f7598c3499b4adc4590e0c05fcce1aeee98bd4ff71bbebac245119dfc457353f8ccff0a991df9c7ddf76091c8d574c4c27449f4185535091c68be55a1855cd9f0732cf40f71a99fd4a13d7fb4a8dbfda2ca13d1e5fbe0ce50d38408d64ef068f86e7d88ffec47c13a45b93d6bed0a5c7ade8792450b683f041ce9aed6f7590817681c82db5f6f19a9e530348010edcc121f1f035d8a9482c07eaab881b5c39a3c5d3186407611451a06964c363d69182052ac1f62868d4cfcf565f4dfb79537387f92382509319cfb9b8d040bcdcd88d5d8b36dde92dcab7f21d2b9a7cf80d8846ffd04d934dfa8f269cb1a63c650dd3f2769437c7504e21bb1ed95cda2c955bc91a71ca928115100e31fa9f749d4244f6ade4395e4d0f233149b04de4085553f749296cab22a878f3c02bd66696fa592e6862b285867e55eb8e96693a65af32b9d8374d6be37e9833e169d47b63105560d8df35750aa6003145114bc9198f1b302b395dca6a9bd8b7f94c11c793a16faed9ef83</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔</title>
      <link href="/2025/03/22/love/"/>
      <url>/2025/03/22/love/</url>
      
        <content type="html"><![CDATA[<p>在时光长河徘徊，​<br>心，悄然被你填满。​<br>不是瞬间的怦然，​<br>是日常里，爱如春雨，​<br>无声无息，渗进生活的每处。​<br>清晨，阳光洒在窗前，​<br>想起你梦中的恬静，​<br>嘴角轻扬。​<br>那光似你的暖，​<br>驱走我心中所有的暗。​<br>新的一天，因你，闪耀着璀璨。​<br>走过熟悉的街道，​<br>花朵绽放，色彩斑斓。​<br>微风中，花儿轻摇，芬芳飘散。​<br>这香，如你的气息，萦绕身畔，​<br>让我沉醉，不愿醒来，​<br>每片花瓣，似你微笑的酒窝，甜。​<br>夜晚，繁星闪烁，月光如水。​<br>窗前独坐，望向星空，​<br>思绪飘向你。​<br>你是那最亮的星，​<br>在我心中，闪耀着独特的辉。​<br>世界喧嚣，想你，心便静如水。​<br>与你相处的时光，​<br>是悠扬的旋律，​<br>奏响生命最美的乐章。​<br>你的笑声，似银铃，清脆回荡，​<br>你的眼神，温柔明亮，洞悉我心房。​<br>我要对你说，​<br>你是我生命最美的遇见。​<br>因你，我懂了爱的真意，​<br>懂了无悔的付出。​<br>愿每个日出日落，与你相伴，​<br>分享生活的喜忧，用一生守护。​<br>这份爱，像春日新芽，充满希望，​<br>又似夏日骄阳，炽热而明亮。​<br>此刻，我鼓起勇气告白，​<br>盼你感受我心中的滚烫。​<br>愿我们的故事，如古老传说，​<br>从这刻起，书写永恒的诗章。❤    </p>]]></content>
      
      
      <categories>
          
          <category> love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一日之遇，景食之乐</title>
      <link href="/2025/03/22/%E4%B8%9C%E5%8C%97%E8%8F%9C/"/>
      <url>/2025/03/22/%E4%B8%9C%E5%8C%97%E8%8F%9C/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="226860190f4cfc47a74e0efc60fc17cc7a2c4b358e7852d4d7097fd086bda9bd">729c507bcdf22e80dd889ffdee7906716a74ffbd8ccb76fb8a05fecc8fab66abba9e04d3aab97536dee3e6020d437011e761554a712277ab1f012c7a94bea2bfc33095365bad87202d61b782562fae7c90891cf1bba23a38ca0395ab7264a0009871f8739191e0b9f5f7527efe08aa39e840afce3bc3dc060f0867282107f591d4f429262fac395d2bd099d4656ed44103264800550efde49b3debdb72c8a1314893f56241ea1cc0a5e011a1f4a97164de59ccb54087a32ef36bf015dcc6e23d93163c78fba8d290a8bcb6a0b137fb9e798aa7a8040031a7f8d36885c24eaa69f27d264ba00357123adf2c6afe2ee3738a5eb432762ceb77bb3e78aeb76b74b02edcf2bbbe17e761ed3d2238882e73ec6db4d09a49f944f712330bd814b89f4eaf4f181f094276b778764fc850d7cd5fb6ddd639207b208e566085d2e0430cb3cd59b727152dee01ae02df707c1f4c0deb1411f56cacd2d915fd7a686092a77c9020fcd51717eaf7c1cf67bdb9891f56aa4b7338578374bffe563f6d4ae98755eb46bed1879360b9d726d4dc1923d94beb4284adcea2dc5c3cb33d4f66a56ba38aca1bb4b2cb8d55a463096541239ce5f6100817ed64ca2422108783c8d5bbd5fbef036806d7b2f05e610edfbabf0873fd92ed9929f180bae5b36158aa3322ffad62411ab881fe192d6ea730ab6b19cd0b144b358d0d9a028dd3ee67a25e049709582193227b6290ee3a3b59542d0b70db30399ea7054bd575926c08527be76532cdb020fc95ea431c0df3a6d3feb74ca9e2447387f76532c3633701c1d47751943824d7e03b0d2d488e90ea3c5a65e8cc631a5e68e9de3bb59ca220d8ad4d598b6d77192d1344688914513a473236fe53583b1f1050928f56afb312ec90f132df0b8d401b70ab79ae97fa0323ba7d6033b075aeb8c6332661bf3fc77446160b585e6f33b48b61a7d383c74ff5f3d64e5cc3884b8c40811cf5d25928dfc2acb5a247342b3b802f910675fe32b26ac422615cdbc22bc5bdb6b86a061e0382b4042c68cf4041e5cce8088ca6ad43f25d8dd3d7b08f18098b5ca2521a2d237dc3eeeaa2ebceb31f4fcb41d7280cb75c94c6733695180c0d52e4ce2e9a3a50ca8c61f893d3b4543860af5ac8222bef66fbff58d5b73738e591c9d4b01e71a65cd4242c8accf2571d1fbbd672851f4390e7d01a92abc6d8e51bef66c9491d549331f37e9b7c858c3e11b9c1c722595614e161ec2d71a73cd3789738c01a73bd5dbf253dcd2a22cb76b135cbc6d0022bcaced86e739b36d8d2d1712c083c570f3afeae296138b066efd4cfbf5fc5aa3fff66c0f06c1474a9690dcf2dc58122a87aff65008be05995aa6ee05f4586a2cf90545e1c59778357b2b88b70bdff0ac052bcc455b1837799698b762eed6737b3f4419d057a2dae450f0e36dda346ee5ac028bf044d241ed7c205df064e3752c7f03b0f3a03484d513e7b85c3e89e8b000e026c881b9b24bd744d54804632696b26e5c2467a2a4eec3dea352101bc11c67734545edff90317a4d8efc1a5bbbeb2e84fdd5c1a9954ae8186a0da88f7bda1321c0aea708e1a856976259bb6b55d60be908b0f9e7795fa9dd95b78b9a61f9b34bbf835bd86caed9a63db40dbae3ea8bf59d867818e510950abe75a8c12c7261f62d6acf5a0f7f11730b1f761d672f21952bf43fb09ecabeab1d5b15a9b4d042ca2c1c177e92b9e7348c7dcc149f65c4db50e3ab552dc0c00c774a7d709144a92dcaf0099aee547456d336a6164ed8f9bfd4baab61e9357f059a4f37040603bad21520bd5b9389061086dde9c4b3d97ce7744b9a0e0530c6bf3bd62d2f4853657c01f6259ce6ef060ae3b3234558210f6f99d8a8d89758c695a36d32728f7b49d88a24d77a7376cc145f03016bdb97b10c8943cda8a2858cabfd731b31e090288a6347b02cb75d4ba48278cee2b1a770a4cc8c45084357a92f7dcb1e998d9dc03363de88b21371a1910f6f1c6cfe941eabc15c175bab726b11668622b55d58d2c4416ad49199eb1e70d85cc2d7779dcd328ccb565c5aab985f1f8435d754e2dee1cb77ffb667a23ec07ddd4f2d81aa48f7ac874761d95719d557821dfa7a31d0953eb9d857f0fcb64234c86a3f39cddbe6397f4b3e28b3215fc6ac0792edd102de8f915f3e8117d3f6ed8b6c26bcf0483a7e6ecaace714f3923f1792f7dcf098538933f74452f13d5a0fbcd23881fd767121144485ed3e8b86f6deacdf6c4cedf7f9cf1fa9e6836b776a7d7b4c042469127e2fba4e74599a7666c2ffefecbbdd27539ab3ec7c2f7b91995bf4f6b9d779302d97242d7f429dd7262fbfa8d9d7ea0b3d569c11aa6a9a77421be0c04fd1d29794504d4fe694e715618ada6f68a31fc7b58bfbc011e28b8fc88a13b053ebc2e50c0a8a569f93032efef76b5a571866a946b99af33093cada19cadc9f12f74a3a4067a8e29a043d795c2ececf4bbbe17c7d665fa74459bad16de2b3266d366cd68c7c81c9cd05def0a35870327e39626ead39705c51ce5697e996aaf4243b4bf63ad84e6f52814ee0c653efdf8f9c113b5e642fce20d7406c8a3b81a5b91d5e4e42fcda34a9dd3f8def824f6a865fc6b97d8f03ed01e7e6ebbf88619bf0edd10281ba09d402c5c42de88304f99ed3cfc45836a283076894d29a26d3a0ffee1e803f45e1eee156edf87d943399615a1f7fb30257332bde7d44e6cac1840e8c0244b8d3a264be1f8e9fefcc525a454dc37d9f526cdc5f84f9c330df5e79be17bd704743f6d0a0acbd456c6c20ee9d65fe812833eab8f6c137436930437edae96b1de4d93466a5ef6b938dc23531a0ace05f5920de7de9689140a30aaabb2be51d60399def427d35b226ab0d7431126362fdcff978aaf6d012c459e23012e7a37f1d662df2517a8c72d4cf9617fe5f0ddd4f440cc65d894ab6ad911505bad8938b1483c4aba411bb020b402f524d6bd91b935e4656a68a73088dbfb6949181404a3ee312c5b58afa697c160256e05a6da3ee8298eef673753ee8c10f26bd897c71cfa285d4f067546456fb9f6465f6af22379bf13db77b4afa0377be30a7dd09513586b8a6a7946ccc5aa6f1b18dd20db5cc8325c65c29bd103640430027561f425a8f3f6421695eb84ff7766a85152b3349b9cc1797a65fbc2278627d6f48a9541b1ec195091ff8f2b7dc9c3e1a70a5f1f8d65460fb6ffbf8e336c97c8e2e36025015d12c1d2e34f7d347fa355d3e8e2fe887c3ebca1d42144072bb599bf9ba57a64188952230c52d02cffdae334d4fca1d68b9ef8c7b5da23a34d1f68bfd7cb7a9daf8e9d47bc7d4b967b4defd42a996d7be1fd173c76a6091a4cec26b0b25dbdeaf3f0159c597ed1ad9a56686e671b5169f4663cbe5d7f8579269fd9390d5bf4bf47d7d773ac5599c7155af37ff486210006d43b24ab6c51814ffae67cea9c28757c4382a34300015d74120e09f945e08a34fb483f0f82f944478059e9192e26e6b3e90d1ac5f7d261918871fd8352aadc15cb93eedcf811d4ab65f0ddc16f642b1c18ea4446492351174c21ddc08534f16aac48839847346cc755d755306215a76fd2a01646ea008e92981115ad79aecc2c5372e5445706fa33eb70a6acec028445c39dc5060c83ad43c87bb8cdafb19d9745ac3c92a3af106965f2226fc561129f5c42c0cde0210c1b5642e771536aacf7c24546265ad0059a139688788dce98b10194f18b7215fd3003fe209ae825e6125263bb9059f1f03730e695e89bf3b1ddc130c4af15ada8fdf1eedfd89a00778a95119652569eba308587c3f8aa71c9da6b425ad95dc9b2bc97764210b58b0b7a5199d6dcf2a388f6b7c821ca4127f09f992bf7af643013db59d3a017c627411e4f72ea6502f93ef120d5833336d418b9e9354dc5ac6186186f27ca39f47c4f0477b4f033fd3d92e5fdc02524a01a5282</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>古诗词</title>
      <link href="/2025/03/22/%E5%8F%A4%E8%AF%97/"/>
      <url>/2025/03/22/%E5%8F%A4%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<p><head>    <title>古诗词集</title>    <style>        body {            font-family: 'SimSun', serif;            line-height: 1.6;            padding: 20px;            font-size: 18px; /* 添加这一行，将字体大小设置为 18px ，你可以根据需要调整数值 */        }        h2 {            margin-top: 30px;            margin-bottom: 15px;            border-bottom: 1px solid #ccc;            padding-bottom: 5px;        }    </style></head></p><p><body><br>    <h2>《国风・周南・关雎》</h2><br>关关雎鸠，在河之洲。窈窕淑女，君子好逑。<br><br>参差荇菜，左右流之。窈窕淑女，寤寐求之。<br><br>求之不得，寤寐思服。悠哉悠哉，辗转反侧。<br><br>参差荇菜，左右采之。窈窕淑女，琴瑟友之。<br><br>参差荇菜，左右芼之。窈窕淑女，钟鼓乐之。<br><br>    <h2>《龟虽寿》</h2><br>神龟虽寿，犹有竟时。螣蛇乘雾，终为土灰。<br><br>老骥伏枥，志在千里。烈士暮年，壮心不已。<br><br>盈缩之期，不但在天；养怡之福，可得永年。<br><br>幸甚至哉，歌以咏志。<br>    <h2>《饮酒・其五》</h2><br>结庐在人境，而无车马喧。<br><br>问君何能尔？心远地自偏。<br><br>采菊东篱下，悠然见南山。<br><br>山气日夕佳，飞鸟相与还。<br><br>此中有真意，欲辨已忘言。<br><br>    <h2>《春江花月夜》</h2><br>春江潮水连海平，海上明月共潮生。<br><br>滟滟随波千万里，何处春江无月明！<br><br>江流宛转绕芳甸，月照花林皆似霰。<br><br>空里流霜不觉飞，汀上白沙看不见。<br><br>江天一色无纤尘，皎皎空中孤月轮。<br><br>江畔何人初见月？江月何年初照人？<br><br>人生代代无穷已，江月年年望相似。<br><br>不知江月待何人，但见长江送流水。<br><br>白云一片去悠悠，青枫浦上不胜愁。<br><br>谁家今夜扁舟子？何处相思明月楼？<br><br>可怜楼上月徘徊，应照离人妆镜台。<br><br>玉户帘中卷不去，捣衣砧上拂还来。<br><br>此时相望不相闻，愿逐月华流照君。<br><br>鸿雁长飞光不度，鱼龙潜跃水成文。<br><br>昨夜闲潭梦落花，可怜春半不还家。<br><br>江水流春去欲尽，江潭落月复西斜。<br><br>斜月沉沉藏海雾，碣石潇湘无限路。<br><br>不知乘月几人归，落月摇情满江树。<br><br>    <h2>《送杜少府之任蜀州》</h2><br>城阙辅三秦，风烟望五津。<br><br>与君离别意，同是宦游人。<br><br>海内存知己，天涯若比邻。<br><br>无为在歧路，儿女共沾巾。<br><br>    <h2>《黄鹤楼》</h2><br>昔人已乘黄鹤去，此地空余黄鹤楼。<br><br>黄鹤一去不复返，白云千载空悠悠。<br><br>晴川历历汉阳树，芳草萋萋鹦鹉洲。<br><br>日暮乡关何处是？烟波江上使人愁。<br><br>    <h2>《将进酒》</h2><br>君不见黄河之水天上来，奔流到海不复回。<br><br>君不见高堂明镜悲白发，朝如青丝暮成雪。<br><br>人生得意须尽欢，莫使金樽空对月。<br><br>天生我材必有用，千金散尽还复来。<br><br>烹羊宰牛且为乐，会须一饮三百杯。<br><br>岑夫子，丹丘生，将进酒，杯莫停。<br><br>与君歌一曲，请君为我倾耳听。<br><br>钟鼓馔玉不足贵，但愿长醉不复醒。<br><br>古来圣贤皆寂寞，惟有饮者留其名。<br><br>陈王昔时宴平乐，斗酒十千恣欢谑。<br><br>主人何为言少钱，径须沽取对君酌。<br><br>五花马，千金裘，呼儿将出换美酒，与尔同销万古愁。<br><br>    <h2>《春望》</h2><br>国破山河在，城春草木深。<br><br>感时花溅泪，恨别鸟惊心。<br><br>烽火连三月，家书抵万金。<br><br>白头搔更短，浑欲不胜簪。<br><br>    <h2>《出塞・其一》</h2><br>秦时明月汉时关，万里长征人未还。<br><br>但使龙城飞将在，不教胡马度阴山。<br><br>    <h2>《江雪》</h2><br>千山鸟飞绝，万径人踪灭。<br><br>孤舟蓑笠翁，独钓寒江雪。<br></p>]]></content>
      
      
      <categories>
          
          <category> 诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大事件文档</title>
      <link href="/2025/03/22/%E5%A4%A7%E4%BA%8B%E4%BB%B6/"/>
      <url>/2025/03/22/%E5%A4%A7%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><h3 id="1-1-创建vue工程-big-event"><a href="#1-1-创建vue工程-big-event" class="headerlink" title="1.1 创建vue工程(big-event)"></a>1.1 创建vue工程(big-event)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br><span class="line"></span><br><span class="line">cd big-event</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="1-2-安装插件"><a href="#1-2-安装插件" class="headerlink" title="1.2 安装插件"></a>1.2 安装插件</h3><ol><li><p>安装element-plus</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.1</span> 执行命令: npm install element-plus --save</span><br><span class="line"><span class="number">1.2</span> 在main.<span class="property">js</span>中做如下配置</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br></pre></td></tr></table></figure></li><li><p>安装axios</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>安装sass依赖</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install sass -D</span><br></pre></td></tr></table></figure></li></ol><h3 id="1-3-目录调整"><a href="#1-3-目录调整" class="headerlink" title="1.3 目录调整"></a>1.3 目录调整</h3><ol><li><p>删除components目录下的内容</p></li><li><p>删除App.vue中的内容，只保留script和template标签</p></li><li><p>新建如下目录：</p></li></ol><p>​    api：存放接口调用的js文件</p><p>​    utils：存放工具js文件</p><p>​          拷贝request.js到util目录</p><p>​    views：存放页面的.vue文件</p><ol><li>删除assets目录中的内容， 将资料中的静态资源文件全部拷贝到该目录下</li></ol><h1 id="二、注册"><a href="#二、注册" class="headerlink" title="二、注册"></a>二、注册</h1><h3 id="2-1-页面搭建"><a href="#2-1-页面搭建" class="headerlink" title="2.1 页面搭建"></a>2.1 页面搭建</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">User</span>, <span class="title class_">Lock</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//控制注册与登录表单的显示， 默认显示注册</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> isRegister = <span class="title function_">ref</span>(<span class="literal">false</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;login-page&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 注册表单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isRegister&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入再次密码&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 注册按钮 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span>&gt;</span></span><br><span class="line">                        注册</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = false&quot;</span>&gt;</span></span><br><span class="line">                        ← 返回</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 登录表单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-checkbox</span>&gt;</span>记住我<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>忘记密码？<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 登录按钮 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = true&quot;</span>&gt;</span></span><br><span class="line">                        注册 →</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/* 样式 */</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.login-page</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.bg</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;@/assets/logo2.png&#x27;</span>) no-repeat <span class="number">60%</span> center / <span class="number">240px</span> auto,</span></span><br><span class="line"><span class="language-css">            <span class="built_in">url</span>(<span class="string">&#x27;@/assets/login_bg.jpg&#x27;</span>) no-repeat center / cover;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.form</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">user-select</span>: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.flex</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-页面数据绑定与事件绑定"><a href="#2-2-页面数据绑定与事件绑定" class="headerlink" title="2.2 页面数据绑定与事件绑定"></a>2.2 页面数据绑定与事件绑定</h3><h4 id="2-2-1-数据绑定"><a href="#2-2-1-数据绑定" class="headerlink" title="2.2.1 数据绑定"></a>2.2.1 数据绑定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于注册的数据模型</span></span><br><span class="line"><span class="keyword">const</span> registerData = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">rePassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-2-2-表单校验"><a href="#2-2-2-表单校验" class="headerlink" title="2.2.2 表单校验"></a>2.2.2 表单校验</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义确认密码的校验函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">rePasswordValid</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="literal">null</span> || value === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;请再次确认密码&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (registerData.<span class="property">password</span> !== value) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;两次输入密码不一致&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用于注册的表单校验模型</span></span><br><span class="line"><span class="keyword">const</span> registerDataRules = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: [</span><br><span class="line">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">min</span>: <span class="number">5</span>, <span class="attr">max</span>: <span class="number">16</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名的长度必须为5~16位&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">password</span>: [</span><br><span class="line">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">min</span>: <span class="number">5</span>, <span class="attr">max</span>: <span class="number">16</span>, <span class="attr">message</span>: <span class="string">&#x27;密码长度必须为5~16位&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">rePassword</span>: [</span><br><span class="line">        &#123; <span class="attr">validator</span>: rePasswordValid, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-2-3-事件绑定"><a href="#2-2-3-事件绑定" class="headerlink" title="2.2.3 事件绑定"></a>2.2.3 事件绑定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于注册的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;注册...&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-接口调用"><a href="#2-3-接口调用" class="headerlink" title="2.3 接口调用"></a>2.3 接口调用</h3><h4 id="2-3-1-在src-api-user-js中提供访问注册接口的函数"><a href="#2-3-1-在src-api-user-js中提供访问注册接口的函数" class="headerlink" title="2.3.1 在src/api/user.js中提供访问注册接口的函数"></a>2.3.1 在src/api/user.js中提供访问注册接口的函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">registerService</span> = (<span class="params">registerData</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>()</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> registerData) &#123;</span><br><span class="line">        params.<span class="title function_">append</span>(key, registerData[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/user/register&#x27;</span>, params)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-在Login-vue中完成注册接口调用"><a href="#2-3-2-在Login-vue中完成注册接口调用" class="headerlink" title="2.3.2 在Login.vue中完成注册接口调用"></a>2.3.2 在Login.vue中完成注册接口调用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; registerService&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span><br><span class="line"><span class="comment">//用于注册的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//console.log(&#x27;注册...&#x27;);</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">registerService</span>(registerData.<span class="property">value</span>);</span><br><span class="line">    <span class="keyword">if</span> (result.<span class="property">code</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;注册成功!&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;注册失败!&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-处理跨域问题"><a href="#2-4-处理跨域问题" class="headerlink" title="2.4 处理跨域问题"></a>2.4 处理跨域问题</h3><p>由于发起ajax请求的域为<a href="http://localhost:5173">http://localhost:5173</a>, 而后台服务器的域为 <a href="http://localhost:8080">http://localhost:8080</a>, 所以浏览器会限制该请求的发送, 这种问题称为跨域问题, 跨域问题可以在服务器端解决,也可以在浏览器端解决, 咱们这一块通过配置代理的方式解决</p><p><strong>request.js中配置统一前缀 /api</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定制请求的实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//导入axios  npm install axios</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="comment">//定义一个变量,记录公共的前缀  ,  baseURL</span></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;/api&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;baseURL&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加响应拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">result</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> result.<span class="property">data</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err);<span class="comment">//异步的状态转化成失败的状态</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance;</span><br></pre></td></tr></table></figure><p><strong>vie.config.js中配置代理</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//配置代理</span></span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8080&#x27;</span>, <span class="comment">// 后端服务器地址</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>, <span class="comment">// 是否改变请求域名</span></span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)<span class="comment">//将原有请求路径中的api替换为&#x27;&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、登录"><a href="#三、登录" class="headerlink" title="三、登录"></a>三、登录</h1><h3 id="3-1页面数据绑定与事件绑定"><a href="#3-1页面数据绑定与事件绑定" class="headerlink" title="3.1页面数据绑定与事件绑定"></a>3.1页面数据绑定与事件绑定</h3><h4 id="3-1-1-绑定数据"><a href="#3-1-1-绑定数据" class="headerlink" title="3.1.1 绑定数据"></a>3.1.1 绑定数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复用注册表单的数据模型</span></span><br><span class="line"><span class="keyword">const</span> registerData = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">rePassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-1-2-每次点击注册或者登录，共用数据模型中的数据"><a href="#3-1-2-每次点击注册或者登录，共用数据模型中的数据" class="headerlink" title="3.1.2 每次点击注册或者登录，共用数据模型中的数据"></a>3.1.2 每次点击注册或者登录，共用数据模型中的数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空数据模型的数据</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">clearRegisterData</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    registerData.<span class="property">value</span> = &#123;</span><br><span class="line">        <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">rePassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-3-事件绑定"><a href="#3-1-3-事件绑定" class="headerlink" title="3.1.3 事件绑定"></a>3.1.3 事件绑定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> =  (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-接口调用"><a href="#3-2-接口调用" class="headerlink" title="3.2 接口调用"></a>3.2 接口调用</h3><h4 id="3-2-1-在src-api-user-js中提供访问注册接口的函数"><a href="#3-2-1-在src-api-user-js中提供访问注册接口的函数" class="headerlink" title="3.2.1 在src/api/user.js中提供访问注册接口的函数"></a>3.2.1 在src/api/user.js中提供访问注册接口的函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">loginService</span> = (<span class="params">loginData</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">var</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> loginData)&#123;</span><br><span class="line">        params.<span class="title function_">append</span>(key,loginData[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/user/login&#x27;</span>,params)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-在Login-vue中完成登录接口调用"><a href="#3-2-2-在Login-vue中完成登录接口调用" class="headerlink" title="3.2.2 在Login.vue中完成登录接口调用"></a>3.2.2 在Login.vue中完成登录接口调用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; registerService, loginService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用于登录的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">loginService</span>(registerData.<span class="property">value</span>)</span><br><span class="line">    <span class="keyword">if</span>(result.<span class="property">code</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;登录成功!&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;登录失败!&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、优化axios响应截器"><a href="#四、优化axios响应截器" class="headerlink" title="四、优化axios响应截器"></a>四、优化axios响应截器</h1><p>在接口调用的API中，我们都需要对业务响应的状态进行判断，从而给用户对应的提示，这个工作不难，但是每个接口的调用，都这样写代码，显然是比较繁琐的，我们可以在axios的相应拦截器中，如果服务器响应成功了，统一判断后台返回的业务状态码code，如果成功了，正常返回数据，如果失败了，则给出用户对应的提示即可</p><p><strong>请求工具request.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加响应拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//如果业务状态码为0，代表本次操作成功</span></span><br><span class="line">        <span class="keyword">if</span> (result.<span class="property">data</span>.<span class="property">code</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result.<span class="property">data</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//代码走到这里，代表业务状态码不是0，本次操作失败</span></span><br><span class="line">        <span class="title function_">alert</span>(result.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(result.<span class="property">data</span>);<span class="comment">//异步的状态转化成失败的状态</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err);<span class="comment">//异步的状态转化成失败的状态</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>接口调用user.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于注册的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//console.log(&#x27;注册...&#x27;);</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">registerService</span>(registerData.<span class="property">value</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;注册成功!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用于登录的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">loginService</span>(registerData.<span class="property">value</span>)</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;登录成功!&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Element-Plus提示框的使用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line"><span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;登录成功!&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="五、主页面布局"><a href="#五、主页面布局" class="headerlink" title="五、主页面布局"></a>五、主页面布局</h1><p><img src="assets/1697857363429.png" alt="1697857363429"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Management</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Promotion</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">UserFilled</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">User</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Crop</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">EditPen</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">SwitchButton</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">CaretBottom</span></span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;@/assets/default.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">class</span>=<span class="string">&quot;layout-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧菜单 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;el-aside__logo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">active-text-color</span>=<span class="string">&quot;#ffd04b&quot;</span> <span class="attr">background-color</span>=<span class="string">&quot;#232323&quot;</span>  <span class="attr">text-color</span>=<span class="string">&quot;#fff&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">router</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Management</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-menu-item</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Promotion</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-sub-menu</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">title</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">UserFilled</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-menu-item</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">User</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-menu-item</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Crop</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-menu-item</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">EditPen</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-sub-menu</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 右侧主区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 头部区域 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span>黑马程序员：<span class="tag">&lt;<span class="name">strong</span>&gt;</span>东哥<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-dropdown</span> <span class="attr">placement</span>=<span class="string">&quot;bottom-end&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;el-dropdown__box&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-avatar</span> <span class="attr">:src</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">CaretBottom</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">dropdown</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;User&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Crop&quot;</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;password&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;EditPen&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;logout&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;SwitchButton&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 中间区域 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 1290px; height: 570px;border: 1px solid red;&quot;</span>&gt;</span></span><br><span class="line">                    内容展示区</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 底部区域 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>大事件 ©2023 Created by 黑马程序员<span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.layout-container</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#232323</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &amp;__logo &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;@/assets/logo.png&#x27;</span>) no-repeat center / <span class="number">120px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-menu</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-dropdown__box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.el-icon</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#999</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            &amp;<span class="selector-pseudo">:active</span>,</span></span><br><span class="line"><span class="language-css">            &amp;<span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.el-footer</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#666</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六、路由"><a href="#六、路由" class="headerlink" title="六、路由"></a>六、路由</h1><p>在App.vue中，不能同时展示Login.vue和Layout.vue，实际的需求是用户第一次访问程序，先展示登录页面，当用户登录成功后，再展示主页面，如果要达成这个需求，需要用到vue提供的路由相关的知识</p><p>路由，从起点到终点时，决定从起点到终点的路径的进程，在前端工程中，路由指的是根据不同的访问路径，展示不同组件的内容。Vue Router是Vue.js的官方路由，它与Vue.js深度集成，让Vue.js构建单页面应用变得更加轻而易举</p><h3 id="6-1安装路由"><a href="#6-1安装路由" class="headerlink" title="6.1安装路由"></a>6.1安装路由</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@<span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="6-2创建路由器，并导出"><a href="#6-2创建路由器，并导出" class="headerlink" title="6.2创建路由器，并导出"></a>6.2创建路由器，并导出</h3><p>在src/router目录下，定义一个js文件，起名为index.js。这样名字的js文件在导入时，可以不写文件名，只要定位到文件所在的文件夹即可，使用起来很方便</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入vue-router</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">//导入组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LoginVue</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Login.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LayoutVue</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Layout.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义路由关系</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>, <span class="attr">component</span>: <span class="title class_">LoginVue</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">component</span>: <span class="title class_">LayoutVue</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建路由器</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">    <span class="attr">routes</span>: routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="6-3在vue应用实例中使用router"><a href="#6-3在vue应用实例中使用router" class="headerlink" title="6.3在vue应用实例中使用router"></a>6.3在vue应用实例中使用router</h3><p>在main.js中导入创建应用实力的js文件，并调用实例的use方法使用路由器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br></pre></td></tr></table></figure><h3 id="6-4定义展示路由组件的地方"><a href="#6-4定义展示路由组件的地方" class="headerlink" title="6.4定义展示路由组件的地方"></a>6.4定义展示路由组件的地方</h3><p>在App.vue文件的template标签中，定义router-view标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将来不管根据路由匹配到的组件内容，会在router-view标签内进行展示</p><h3 id="6-5-测试"><a href="#6-5-测试" class="headerlink" title="6.5 测试"></a>6.5 测试</h3><p>在浏览器地址栏分别访问：<a href="http://localhost:5173/">http://localhost:5173/</a>    和   <a href="http://localhost:5173/login">http://localhost:5173/login</a></p><h3 id="6-6-路由API"><a href="#6-6-路由API" class="headerlink" title="6.6 路由API"></a>6.6 路由API</h3><p>在登录成功后，需要通过代码的方式将页面切换到首页，此时就需要调用路由器相关的API</p><p><strong>获取路由器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br></pre></td></tr></table></figure><p><strong>调用API</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="七、子路由"><a href="#七、子路由" class="headerlink" title="七、子路由"></a>七、子路由</h1><p>在咱们的主页面中，当用户点击左侧的菜单时，右侧主区域的内容需要发生变化，将来每切换一个菜单，右侧需要加载对应组件的内容进行展示，像这样的场景咱们也需要使用路由来完成</p><p>由于这些组件都需要在Layout.vue中展示， 而Layout.vue本身已经参与了路由，因此我们需要在Layout.vue中通过子路由的方式来完成组件的切换</p><h3 id="7-1提供菜单对应的组件"><a href="#7-1提供菜单对应的组件" class="headerlink" title="7.1提供菜单对应的组件"></a>7.1提供菜单对应的组件</h3><p>可以复制资料中的文件，也可以自己创建：</p><ul><li>ArticleCategory.vue</li><li>ArticleManage.vue</li><li>UserInfo.vue</li><li>UserAvatar.vue</li><li>UserResetPassword.vue</li></ul><h3 id="7-2配置子路由"><a href="#7-2配置子路由" class="headerlink" title="7.2配置子路由"></a>7.2配置子路由</h3><p>在src/router/index.js中配置子路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义路由关系</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>, <span class="attr">component</span>: <span class="title class_">LoginVue</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">LayoutVue</span>,</span><br><span class="line">        <span class="comment">//重定向</span></span><br><span class="line">        <span class="attr">redirect</span>: <span class="string">&#x27;/article/manage&#x27;</span>,</span><br><span class="line">        <span class="comment">//子路由</span></span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">            &#123; <span class="attr">path</span>: <span class="string">&#x27;/article/category&#x27;</span>, <span class="attr">component</span>: <span class="title class_">ArticleCategoryVue</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">path</span>: <span class="string">&#x27;/article/manage&#x27;</span>, <span class="attr">component</span>: <span class="title class_">ArticleManageVue</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">path</span>: <span class="string">&#x27;/user/info&#x27;</span>, <span class="attr">component</span>: <span class="title class_">UserInfoVue</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">path</span>: <span class="string">&#x27;/user/avatar&#x27;</span>, <span class="attr">component</span>: <span class="title class_">UserAvatarVUe</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">path</span>: <span class="string">&#x27;/user/password&#x27;</span>, <span class="attr">component</span>: <span class="title class_">UserResetPasswordVue</span> &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="7-3-在Layout-vue组件的右侧中间区域，添加router-view标签"><a href="#7-3-在Layout-vue组件的右侧中间区域，添加router-view标签" class="headerlink" title="7.3 在Layout.vue组件的右侧中间区域，添加router-view标签"></a>7.3 在Layout.vue组件的右侧中间区域，添加router-view标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 中间区域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 1290px; height: 570px;border: 1px solid red;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4-菜单项设置点击后跳转的路由路径"><a href="#7-4-菜单项设置点击后跳转的路由路径" class="headerlink" title="7.4 菜单项设置点击后跳转的路由路径"></a>7.4 菜单项设置点击后跳转的路由路径</h3><p>el-menu-item 标签的index属性可以设置点击后的路由路径</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;/article/category&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Management</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="八、文章分类列表"><a href="#八、文章分类列表" class="headerlink" title="八、文章分类列表"></a>八、文章分类列表</h1><h3 id="8-1-文章分类组件"><a href="#8-1-文章分类组件" class="headerlink" title="8.1 文章分类组件"></a>8.1 文章分类组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Edit</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Delete</span></span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> categorys = <span class="title function_">ref</span>([</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;美食&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;my&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:06:59&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:06:59&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;娱乐&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;yl&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:16&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:16&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;军事&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:33&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:33&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;categorys&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;categoryName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;categoryAlias&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.page-container</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-2-列表接口调用"><a href="#8-2-列表接口调用" class="headerlink" title="8.2 列表接口调用"></a>8.2 列表接口调用</h3><p>src/api/article.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入请求工具类</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//文章分类列表查询</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleCategoryListService</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/category&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ArticleCategory.vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有文章分类数据</span></span><br><span class="line"><span class="keyword">import</span> &#123; articleCategoryListService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/article.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllCategory</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleCategoryListService</span>();</span><br><span class="line">    categorys.<span class="property">value</span> = result.<span class="property">data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getAllCategory</span>();</span><br></pre></td></tr></table></figure><p>但是上述的代码并不能真正的获取到所有文章分类数据，服务器响应状态码为401，因为目前请求头中并没有携带token</p><h1 id="九、Pinia状态管理库"><a href="#九、Pinia状态管理库" class="headerlink" title="九、Pinia状态管理库"></a>九、Pinia状态管理库</h1><p>Pinia是Vue的专属状态管理库，它允许你跨组件或页面共享状态</p><h3 id="9-1安装"><a href="#9-1安装" class="headerlink" title="9.1安装"></a>9.1安装</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><h3 id="9-2使用Pinia"><a href="#9-2使用Pinia" class="headerlink" title="9.2使用Pinia"></a>9.2使用Pinia</h3><p>在main.js中，引入pinia，创建pinia实例，并调用vue应用实例的use方法使用pinia</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br></pre></td></tr></table></figure><h3 id="9-3-定义Store"><a href="#9-3-定义Store" class="headerlink" title="9.3 定义Store"></a>9.3 定义Store</h3><p>在src/stores目录下定义token.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    defineStore参数描述：</span></span><br><span class="line"><span class="comment">        第一个参数：给状态起名，具有唯一性</span></span><br><span class="line"><span class="comment">        第二个参数：函数，可以把定义该状态中拥有的内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    defineStore返回值描述：</span></span><br><span class="line"><span class="comment">        返回的是一个函数，将来可以调用该函数，得到第二个参数中返回的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTokenStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;token&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义描述token</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义修改token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">newToken</span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span> = newToken</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.定义移除token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeToken</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        token,setToken,removeToken</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="9-4-使用Store"><a href="#9-4-使用Store" class="headerlink" title="9.4 使用Store"></a>9.4 使用Store</h3><p>在需要使用状态的地方，导入@/stores/*.js , 使用即可</p><p>在Login.vue中导入@/stores/token.js, 并且当用户登录成功后，将token保存pinia中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入token状态</span></span><br><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用useTokenStore得到状态</span></span><br><span class="line"><span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//用于登录的事件函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">loginService</span>(registerData.<span class="property">value</span>)</span><br><span class="line">    <span class="comment">//保存token</span></span><br><span class="line">    tokenStore.<span class="title function_">setToken</span>(result.<span class="property">data</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;登录成功!&#x27;</span>)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在article.js中导入@/stores/token.js, 从pinia中获取到存储的token，在发起查询文章分类列表的时候把token通过请求头的形式携带给服务器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入@/stores/token.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;../stores/token&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//文章分类列表查询</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleCategoryListService</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取token状态</span></span><br><span class="line">    <span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>()</span><br><span class="line">    <span class="comment">//通过请求头Authorization携带token</span></span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/category&#x27;</span>, &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;Authorization&#x27;</span>: tokenStore.<span class="property">token</span> &#125; &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十、axios请求拦截器"><a href="#十、axios请求拦截器" class="headerlink" title="十、axios请求拦截器"></a>十、axios请求拦截器</h1><p>当进入主页后，将来要与后台交互，都需要携带token，如果每次请求都写这样的代码，将会比较繁琐，此时可以将携带token的代码通过请求拦截器统一处理</p><p>在 src/util/request.js中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入token状态</span></span><br><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span>;</span><br><span class="line"><span class="comment">//添加请求拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function">(<span class="params">config</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//在发送请求之前做什么</span></span><br><span class="line">        <span class="keyword">let</span> tokenStore = <span class="title function_">useTokenStore</span>()</span><br><span class="line">        <span class="comment">//如果token中有值，在携带</span></span><br><span class="line">        <span class="keyword">if</span>(tokenStore.<span class="property">token</span>)&#123;</span><br><span class="line">            config.<span class="property">headers</span>.<span class="property">Authorization</span>=tokenStore.<span class="property">token</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//如果请求错误做什么</span></span><br><span class="line">        <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="十一、Pinia持久化插件"><a href="#十一、Pinia持久化插件" class="headerlink" title="十一、Pinia持久化插件"></a>十一、Pinia持久化插件</h1><p>默认情况下，由于pinia是内存存储，当你刷新页面的时候pinia中的数据会丢失，可以借助于persist插件解决这个问题，persist插件支持将pinia中的数据持久化到sessionStorage和localStorage中</p><h3 id="11-1-安装persist插件"><a href="#11-1-安装persist插件" class="headerlink" title="11.1 安装persist插件"></a>11.1 安装persist插件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia-persistedstate-plugin</span><br></pre></td></tr></table></figure><h3 id="11-2-pinia中使用persist插件"><a href="#11-2-pinia中使用persist插件" class="headerlink" title="11.2 pinia中使用persist插件"></a>11.2 pinia中使用persist插件</h3><p>在main.js中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="comment">//导入持久化插件</span></span><br><span class="line"><span class="keyword">import</span> &#123;createPersistedState&#125; <span class="keyword">from</span><span class="string">&#x27;pinia-persistedstate-plugin&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> persist = <span class="title function_">createPersistedState</span>()</span><br><span class="line"><span class="comment">//pinia使用持久化插件</span></span><br><span class="line">pinia.<span class="title function_">use</span>(persist)</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br></pre></td></tr></table></figure><h3 id="11-3-在创建定义状态是配置持久化"><a href="#11-3-在创建定义状态是配置持久化" class="headerlink" title="11.3 在创建定义状态是配置持久化"></a>11.3 在创建定义状态是配置持久化</h3><p>在src/stores/token.js中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTokenStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;token&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义描述token</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.定义修改token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">newToken</span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span> = newToken</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.定义移除token的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeToken</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        token.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        token,setToken,removeToken</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">,</span><br><span class="line"><span class="comment">//参数持久化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="十二、未登录统一处理"><a href="#十二、未登录统一处理" class="headerlink" title="十二、未登录统一处理"></a>十二、未登录统一处理</h1><p>在后续访问接口时，如果没有登录，则前端不携带token，后台服务器会返回响应状态码401，代表未登录，此时可以在axios的响应拦截器中，统一对未登录的情况做处理</p><p><strong>request.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加响应拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//如果业务状态码为0，代表本次操作成功</span></span><br><span class="line">        <span class="keyword">if</span> (result.<span class="property">data</span>.<span class="property">code</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result.<span class="property">data</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//代码走到这里，代表业务状态码不是0，本次操作失败</span></span><br><span class="line">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(result.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(result.<span class="property">data</span>);<span class="comment">//异步的状态转化成失败的状态</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//如果响应状态码时401，代表未登录，给出对应的提示，并跳转到登录页</span></span><br><span class="line">        <span class="keyword">if</span>(err.<span class="property">response</span>.<span class="property">status</span>===<span class="number">401</span>)&#123;</span><br><span class="line">            <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;请先登录！&#x27;</span>)</span><br><span class="line">            router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;服务异常&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err);<span class="comment">//异步的状态转化成失败的状态</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="十三、添加文章分类"><a href="#十三、添加文章分类" class="headerlink" title="十三、添加文章分类"></a>十三、添加文章分类</h1><h3 id="13-1-添加分类弹窗页面"><a href="#13-1-添加分类弹窗页面" class="headerlink" title="13.1 添加分类弹窗页面"></a>13.1 添加分类弹窗页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加分类弹窗 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">title</span>=<span class="string">&quot;添加弹层&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;categoryModel&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding-right: 30px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;categoryName&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;categoryModel.categoryName&quot;</span> <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;categoryAlias&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;categoryModel.categoryAlias&quot;</span> <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;15&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-2-数据模型和校验规则"><a href="#13-2-数据模型和校验规则" class="headerlink" title="13.2 数据模型和校验规则"></a>13.2 数据模型和校验规则</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制添加分类弹窗</span></span><br><span class="line"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加分类数据模型</span></span><br><span class="line"><span class="keyword">const</span> categoryModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">categoryName</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">categoryAlias</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//添加分类表单校验</span></span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">    <span class="attr">categoryName</span>: [</span><br><span class="line">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类名称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">categoryAlias</span>: [</span><br><span class="line">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类别名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-3-添加分类按钮单击事件"><a href="#13-3-添加分类按钮单击事件" class="headerlink" title="13.3 添加分类按钮单击事件"></a>13.3 添加分类按钮单击事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = true&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-4-接口调用"><a href="#13-4-接口调用" class="headerlink" title="13.4 接口调用"></a>13.4 接口调用</h3><p><strong>在article.js中提供添加分类的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleCategoryAddService</span> = (<span class="params">categoryModel</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/category&#x27;</span>, categoryModel)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在页面中调用接口</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//访问后台，添加文章分类</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">addCategory</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleCategoryAddService</span>(categoryModel.<span class="property">value</span>);</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>? result.<span class="property">message</span>:<span class="string">&#x27;添加成功&#x27;</span>)</span><br><span class="line">    <span class="comment">//隐藏弹窗</span></span><br><span class="line">    dialogVisible.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    <span class="comment">//再次访问后台接口，查询所有分类</span></span><br><span class="line">    <span class="title function_">getAllCategory</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addCategory&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十四、修改文章分类"><a href="#十四、修改文章分类" class="headerlink" title="十四、修改文章分类"></a>十四、修改文章分类</h1><h3 id="14-1-修改分类弹窗页面"><a href="#14-1-修改分类弹窗页面" class="headerlink" title="14.1 修改分类弹窗页面"></a>14.1 修改分类弹窗页面</h3><p>修改分类弹窗和新增文章分类弹窗长的一样，所以可以服用添加分类的弹窗</p><p><strong>弹窗标题显示</strong><br>定义标题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗标题</span></span><br><span class="line"><span class="keyword">const</span> title=<span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在弹窗上绑定标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为添加分类按钮绑定事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;title=&#x27;添加分类&#x27;;dialogVisible = true&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为修改分类按钮绑定事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;title=&#x27;修改分类&#x27;;dialogVisible=true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="14-2-数据回显"><a href="#14-2-数据回显" class="headerlink" title="14.2 数据回显"></a>14.2 数据回显</h3><p>当点击修改分类按钮时，需要把当前这一条数据的详细信息显示到修改分类的弹窗上，这个叫回显</p><p><strong>通过插槽的方式得到被点击按钮所在行的数据</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;updateCategoryEcho(row)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>回显函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改分类回显</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateCategoryEcho</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">    title.<span class="property">value</span> = <span class="string">&#x27;修改分类&#x27;</span></span><br><span class="line">    dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    <span class="comment">//将row中的数据赋值给categoryModel</span></span><br><span class="line">    categoryModel.<span class="property">value</span>.<span class="property">categoryName</span>=row.<span class="property">categoryName</span></span><br><span class="line">    categoryModel.<span class="property">value</span>.<span class="property">categoryAlias</span>=row.<span class="property">categoryAlias</span></span><br><span class="line">    <span class="comment">//修改的时候必须传递分类的id，所以扩展一个id属性</span></span><br><span class="line">    categoryModel.<span class="property">value</span>.<span class="property">id</span>=row.<span class="property">id</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-3-接口调用"><a href="#14-3-接口调用" class="headerlink" title="14.3 接口调用"></a>14.3 接口调用</h3><p><strong>article.js中提供修改分类的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleCategoryUpdateService</span> = (<span class="params">categoryModel</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">put</span>(<span class="string">&#x27;/category&#x27;</span>,categoryModel)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改确定按钮的绑定事件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;title===&#x27;添加分类&#x27;? addCategory():updateCategory()&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>调用接口完成修改的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改分类</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateCategory</span>=<span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleCategoryUpdateService</span>(categoryModel.<span class="property">value</span>)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>? result.<span class="property">message</span>:<span class="string">&#x27;修改成功&#x27;</span>)</span><br><span class="line">    <span class="comment">//隐藏弹窗</span></span><br><span class="line">    dialogVisible.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">    <span class="comment">//再次访问后台接口，查询所有分类</span></span><br><span class="line">    <span class="title function_">getAllCategory</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于现在修改和新增共用了一个数据模型，所以在点击添加分类后，有时候会显示数据，此时可以将categoryModel中的数据清空</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清空模型数据</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">clearCategoryModel</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    categoryModel.<span class="property">value</span>.<span class="property">categoryName</span>=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    categoryModel.<span class="property">value</span>.<span class="property">categoryAlias</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改添加按钮的点击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;title = &#x27;添加分类&#x27;; dialogVisible = true;clearCategoryModel()&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十五、删除分类（后台需要补齐）"><a href="#十五、删除分类（后台需要补齐）" class="headerlink" title="十五、删除分类（后台需要补齐）"></a>十五、删除分类（后台需要补齐）</h1><h3 id="15-1-确认框"><a href="#15-1-确认框" class="headerlink" title="15.1 确认框"></a>15.1 确认框</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除分类  给删除按钮绑定事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteCategory</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">    <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span><br><span class="line">        <span class="string">&#x27;你确认删除该分类信息吗？&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">            <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//用户点击了确认</span></span><br><span class="line">            <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//用户点击了取消</span></span><br><span class="line">            <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;取消删除&#x27;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-2-接口调用"><a href="#15-2-接口调用" class="headerlink" title="15.2 接口调用"></a>15.2 接口调用</h3><p><strong>article.js中提供删除分类的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//删除分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleCategoryDeleteService</span> = (<span class="params">id</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">delete</span>(<span class="string">&#x27;/category?id=&#x27;</span>+id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>当用户点击确认后，调用接口删除分类</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除分类</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteCategory</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">    <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span><br><span class="line">        <span class="string">&#x27;你确认删除该分类信息吗？&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">            <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">        .<span class="title function_">then</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="comment">//用户点击了确认</span></span><br><span class="line">            <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleCategoryDeleteService</span>(row.<span class="property">id</span>)</span><br><span class="line">            <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>?result.<span class="property">message</span>:<span class="string">&#x27;删除成功&#x27;</span>)</span><br><span class="line">            <span class="comment">//再次调用getAllCategory，获取所有文章分类</span></span><br><span class="line">            <span class="title function_">getAllCategory</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//用户点击了取消</span></span><br><span class="line">            <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;取消删除&#x27;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十六、文章列表"><a href="#十六、文章列表" class="headerlink" title="十六、文章列表"></a>十六、文章列表</h1><h3 id="16-1-文章列表页面组件"><a href="#16-1-文章列表页面组件" class="headerlink" title="16.1 文章列表页面组件"></a>16.1 文章列表页面组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Edit</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Delete</span></span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//文章分类数据模型</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> categorys = <span class="title function_">ref</span>([</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;美食&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;my&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:06:59&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:06:59&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;娱乐&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;yl&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:16&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:16&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;军事&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryAlias&quot;</span>: <span class="string">&quot;js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:33&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-02 12:08:33&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//用户搜索时选中的分类id</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> categoryId=<span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//用户搜索时选中的发布状态</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> state=<span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//文章列表数据模型</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> articles = <span class="title function_">ref</span>([</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;title&quot;</span>: <span class="string">&quot;陕西旅游攻略&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;content&quot;</span>: <span class="string">&quot;兵马俑,华清池,法门寺,华山...爱去哪去哪...&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;coverImg&quot;</span>: <span class="string">&quot;https://big-event-gwd.oss-cn-beijing.aliyuncs.com/9bf1cf5b-1420-4c1b-91ad-e0f4631cbed4.png&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;state&quot;</span>: <span class="string">&quot;草稿&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryId&quot;</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;title&quot;</span>: <span class="string">&quot;陕西旅游攻略&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;content&quot;</span>: <span class="string">&quot;兵马俑,华清池,法门寺,华山...爱去哪去哪...&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;coverImg&quot;</span>: <span class="string">&quot;https://big-event-gwd.oss-cn-beijing.aliyuncs.com/9bf1cf5b-1420-4c1b-91ad-e0f4631cbed4.png&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;state&quot;</span>: <span class="string">&quot;草稿&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryId&quot;</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;title&quot;</span>: <span class="string">&quot;陕西旅游攻略&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;content&quot;</span>: <span class="string">&quot;兵马俑,华清池,法门寺,华山...爱去哪去哪...&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;coverImg&quot;</span>: <span class="string">&quot;https://big-event-gwd.oss-cn-beijing.aliyuncs.com/9bf1cf5b-1420-4c1b-91ad-e0f4631cbed4.png&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;state&quot;</span>: <span class="string">&quot;草稿&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;categoryId&quot;</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2023-09-03 11:55:30&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">])</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//分页条数据模型</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> pageNum = <span class="title function_">ref</span>(<span class="number">1</span>)<span class="comment">//当前页</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> total = <span class="title function_">ref</span>(<span class="number">20</span>)<span class="comment">//总条数</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> pageSize = <span class="title function_">ref</span>(<span class="number">3</span>)<span class="comment">//每页条数</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//当每页条数发生了变化，调用此函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onSizeChange</span> = (<span class="params">size</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    pageSize.<span class="property">value</span> = size</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//当前页码发生变化，调用此函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onCurrentChange</span> = (<span class="params">num</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    pageNum.<span class="property">value</span> = num</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加文章<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 搜索表单 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">inline</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类：&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;categoryId&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> </span></span><br><span class="line"><span class="tag">                        <span class="attr">v-for</span>=<span class="string">&quot;c in categorys&quot;</span> </span></span><br><span class="line"><span class="tag">                        <span class="attr">:key</span>=<span class="string">&quot;c.id&quot;</span> </span></span><br><span class="line"><span class="tag">                        <span class="attr">:label</span>=<span class="string">&quot;c.categoryName&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">:value</span>=<span class="string">&quot;c.id&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;发布状态：&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;state&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;已发布&quot;</span> <span class="attr">value</span>=<span class="string">&quot;已发布&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;草稿&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草稿&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文章列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;articles&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;categoryId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;发表时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;createTime&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span> <span class="attr">circle</span> <span class="attr">plain</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 分页条 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-pagination</span> <span class="attr">v-model:current-page</span>=<span class="string">&quot;pageNum&quot;</span> <span class="attr">v-model:page-size</span>=<span class="string">&quot;pageSize&quot;</span> <span class="attr">:page-sizes</span>=<span class="string">&quot;[3, 5 ,10, 15]&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">&quot;jumper, total, sizes, prev, pager, next&quot;</span> <span class="attr">background</span> <span class="attr">:total</span>=<span class="string">&quot;total&quot;</span> @<span class="attr">size-change</span>=<span class="string">&quot;onSizeChange&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">current-change</span>=<span class="string">&quot;onCurrentChange&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20px; justify-content: flex-end&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.page-container</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用中文语言包，解决分页条中文问题, 在main.js中完成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> locale <span class="keyword">from</span> <span class="string">&#x27;element-plus/dist/locale/zh-cn.js&#x27;</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>,&#123;locale&#125;)</span><br></pre></td></tr></table></figure><h3 id="16-2、文章分类数据回显"><a href="#16-2、文章分类数据回显" class="headerlink" title="16.2、文章分类数据回显"></a>16.2、文章分类数据回显</h3><p><strong>ArticleMange.vue</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文章列表查询</span></span><br><span class="line"><span class="keyword">import</span> &#123; articleCategoryListService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/article.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArticleCategoryList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取所有分类</span></span><br><span class="line">    <span class="keyword">let</span> resultC = <span class="keyword">await</span> <span class="title function_">articleCategoryListService</span>();</span><br><span class="line">    categorys.<span class="property">value</span> = resultC.<span class="property">data</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticleCategoryList</span>();</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h1 id="十七、-文章列表接口调用"><a href="#十七、-文章列表接口调用" class="headerlink" title="十七、 文章列表接口调用"></a>十七、 文章列表接口调用</h1><p><strong>article.js中提供获取文章列表数据的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文章列表查询</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleListService</span> = (<span class="params">params</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/article&#x27;</span>, &#123; <span class="attr">params</span>: params &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ArticleManage.vue中，调用接口获取数据</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文章列表查询</span></span><br><span class="line"><span class="keyword">import</span> &#123; articleListService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/article.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArticles</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> params = &#123;</span><br><span class="line">        <span class="attr">pageNum</span>: pageNum.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">pageSize</span>: pageSize.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">categoryId</span>: categoryId.<span class="property">value</span> ? categoryId.<span class="property">value</span> : <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">state</span>: state.<span class="property">value</span> ? state.<span class="property">value</span> : <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleListService</span>(params);</span><br><span class="line">    <span class="comment">//渲染列表数据</span></span><br><span class="line">    articles.<span class="property">value</span> = result.<span class="property">data</span>.<span class="property">items</span></span><br><span class="line">    <span class="comment">//为列表中添加categoryName属性</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;articles.<span class="property">value</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> article = articles.<span class="property">value</span>[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;categorys.<span class="property">value</span>.<span class="property">length</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(article.<span class="property">categoryId</span>===categorys.<span class="property">value</span>[j].<span class="property">id</span>)&#123;</span><br><span class="line">                article.<span class="property">categoryName</span>=categorys.<span class="property">value</span>[j].<span class="property">categoryName</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//渲染总条数</span></span><br><span class="line">    total.<span class="property">value</span>=result.<span class="property">data</span>.<span class="property">total</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticles</span>()</span><br></pre></td></tr></table></figure><p><strong>当分页条的当前页和每页条数发生变化，重新发送请求获取数据</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当每页条数发生了变化，调用此函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSizeChange</span> = (<span class="params">size</span>) =&gt; &#123;</span><br><span class="line">    pageSize.<span class="property">value</span> = size</span><br><span class="line">    <span class="title function_">getArticles</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当前页码发生变化，调用此函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onCurrentChange</span> = (<span class="params">num</span>) =&gt; &#123;</span><br><span class="line">    pageNum.<span class="property">value</span> = num</span><br><span class="line">    <span class="title function_">getArticles</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十八、搜索和重置"><a href="#十八、搜索和重置" class="headerlink" title="十八、搜索和重置"></a>十八、搜索和重置</h1><p>为搜索按钮绑定单击事件，调用getArticles函数即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getArticles&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为重置按钮绑定单击事件，清除categoryId和state的之即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;categoryId=&#x27;&#x27;;state=&#x27;&#x27;&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十九、添加文章"><a href="#十九、添加文章" class="headerlink" title="十九、添加文章"></a>十九、添加文章</h1><h3 id="19-1-添加文章抽屉组件"><a href="#19-1-添加文章抽屉组件" class="headerlink" title="19.1 添加文章抽屉组件"></a>19.1 添加文章抽屉组件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Plus</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="comment">//控制抽屉是否显示</span></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="comment">//添加表单数据模型</span></span><br><span class="line"><span class="keyword">const</span> articleModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">categoryId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">coverImg</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">content</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">state</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 抽屉 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-drawer</span> <span class="attr">v-model</span>=<span class="string">&quot;visibleDrawer&quot;</span> <span class="attr">title</span>=<span class="string">&quot;添加文章&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;rtl&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 添加文章表单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;articleModel&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;articleModel.title&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入标题&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;articleModel.categoryId&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">v-for</span>=<span class="string">&quot;c in categorys&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;c.id&quot;</span> <span class="attr">:label</span>=<span class="string">&quot;c.categoryName&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;c.id&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章封面&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span> <span class="attr">:auto-upload</span>=<span class="string">&quot;false&quot;</span> <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;articleModel.coverImg&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;articleModel.coverImg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader-icon&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Plus</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章内容&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span>富文本编辑器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-drawer</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 抽屉样式 */</span></span><br><span class="line"><span class="selector-class">.avatar-uploader</span> &#123;</span><br><span class="line">    :<span class="built_in">deep</span>() &#123;</span><br><span class="line">        <span class="selector-class">.avatar</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.el-upload</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">            <span class="attribute">cursor</span>: pointer;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.editor</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  :<span class="built_in">deep</span>(.ql-editor) &#123;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">200px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为添加文章按钮添加单击事件，展示抽屉</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;visibleDrawer = true&quot;</span>&gt;</span>添加文章<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="19-2-富文本编辑器"><a href="#19-2-富文本编辑器" class="headerlink" title="19.2 富文本编辑器"></a>19.2 富文本编辑器</h3><p>文章内容需要使用到富文本编辑器，这里咱们使用一个开源的富文本编辑器 Quill</p><p>官网地址： <a href="https://vueup.github.io/vue-quill/">https://vueup.github.io/vue-quill/</a></p><p><strong>安装：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @vueup/vue-quill@latest --save</span><br></pre></td></tr></table></figure><p><strong>导入组件和样式：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">QuillEditor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueup/vue-quill&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@vueup/vue-quill/dist/vue-quill.snow.css&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>页面长使用quill组件：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">quill-editor</span></span></span><br><span class="line"><span class="tag">              <span class="attr">theme</span>=<span class="string">&quot;snow&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model:content</span>=<span class="string">&quot;articleModel.content&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">contentType</span>=<span class="string">&quot;html&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>样式美化：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.editor</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  :<span class="built_in">deep</span>(.ql-editor) &#123;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">200px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="19-3-文章封面图片上传"><a href="#19-3-文章封面图片上传" class="headerlink" title="19.3 文章封面图片上传"></a>19.3 文章封面图片上传</h3><p>将来当点击+图标，选择本地图片后，el-upload这个组件会自动发送请求，把图片上传到指定的服务器上，而不需要我们自己使用axios发送异步请求，所以需要给el-upload标签添加一些属性，控制请求的发送</p><p>auto-upload:是否自动上传</p><p>action: 服务器接口路径</p><p>name: 上传的文件字段名</p><p>headers: 设置上传的请求头</p><p>on-success: 上传成功的回调函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import &#123;</span><br><span class="line">    Plus</span><br><span class="line">&#125; from &#x27;@element-plus/icons-vue&#x27;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章封面&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-upload</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span> </span></span><br><span class="line"><span class="tag">               <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span> </span></span><br><span class="line"><span class="tag">               &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;articleModel.coverImg&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;articleModel.coverImg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader-icon&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Plus</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li><p>由于这个请求时el-upload自动发送的异步请求，并没有使用咱们的request.js请求工具，所以在请求的路ing上，需要加上/api, 这个时候请求代理才能拦截到这个请求，转发到后台服务器上</p></li><li><p>要携带请求头，还需要导入pinia状态才可以使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>();</span><br></pre></td></tr></table></figure></li><li><p>在成功的回调函数中，可以拿到服务器响应的数据，其中有一个属性为data，对应的就是图片在阿里云oss上存储的访问地址，需要把它赋值给articleModel的coverImg属性，这样img标签就能显示这张图片了，因为img标签上通过src属性绑定了articleModel.coverImg</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传图片成功回调</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">uploadSuccess</span> = (<span class="params">img</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//img就是后台响应的数据，格式为：&#123;code:状态码，message：提示信息，data: 图片的存储地址&#125;</span></span><br><span class="line">    articleModel.<span class="property">value</span>.<span class="property">coverImg</span>=img.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="19-4-添加文章接口调用"><a href="#19-4-添加文章接口调用" class="headerlink" title="19.4 添加文章接口调用"></a>19.4 添加文章接口调用</h3><p><strong>article.js中提供添加文章函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加文章</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">articleAddService</span> = (<span class="params">articleModel</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/article&#x27;</span>,articleModel)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>为已发布和草稿按钮绑定事件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addArticle(&#x27;已发布&#x27;)&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addArticle(&#x27;草稿&#x27;)&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>ArticleManage.vue中提供addArticle函数完成添加文章接口的调用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加文章</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">addArticle</span>=<span class="keyword">async</span> (<span class="params">state</span>)=&gt;&#123;</span><br><span class="line">    articleModel.<span class="property">value</span>.<span class="property">state</span> = state</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">articleAddService</span>(articleModel.<span class="property">value</span>);</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>? result.<span class="property">message</span>:<span class="string">&#x27;添加成功&#x27;</span>)</span><br><span class="line">    <span class="comment">//再次调用getArticles,获取文章</span></span><br><span class="line">    <span class="title function_">getArticles</span>()</span><br><span class="line">    <span class="comment">//隐藏抽屉</span></span><br><span class="line">    visibleDrawer.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二十、顶部导航栏个人信息显示"><a href="#二十、顶部导航栏个人信息显示" class="headerlink" title="二十、顶部导航栏个人信息显示"></a>二十、顶部导航栏个人信息显示</h1><p>在Layout.vue中，页面加载完就发送请求，获取个人信息展示，并存储到pinia中，因为将来在个人中心中修改信息的时候还需要使用</p><p><strong>user.js中提供获取个人信息的函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userInfoGetService</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/user/userInfo&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>src/stores/user.js中，定义个人中心状态</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserInfoStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;userInfo&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//1.定义用户信息</span></span><br><span class="line">    <span class="keyword">const</span> info = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line">    <span class="comment">//2.定义修改用户信息的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setInfo</span> = (<span class="params">newInfo</span>)=&gt;&#123;</span><br><span class="line">        info.<span class="property">value</span> = newInfo</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.定义清空用户信息的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeInfo</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">        info.<span class="property">value</span>=&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;info,setInfo,removeInfo&#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attr">persist</span>:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>Layout.vue中获取个人信息，并存储到pinia中</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入接口函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;userInfoGetService&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span><br><span class="line"><span class="comment">//导入pinia</span></span><br><span class="line"><span class="keyword">import</span> &#123;useUserInfoStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/user.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> userInfoStore = <span class="title function_">useUserInfoStore</span>();</span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取个人信息</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getUserInf</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">userInfoGetService</span>();</span><br><span class="line">    <span class="comment">//存储pinia</span></span><br><span class="line">    userInfoStore.<span class="property">info</span> =result.<span class="property">data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getUserInf</span>()</span><br></pre></td></tr></table></figure><p><strong>Layout.vue的顶部导航栏中，展示昵称和头像</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>黑马程序员：<span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; userInfoStore.info.nickname ? userInfoStore.info.nickname : userInfoStore.info.usrename &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-avatar</span> <span class="attr">:src</span>=<span class="string">&quot;userInfoStore.info.userPic ? userInfoStore.info.userPic : avatar&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二十一、el-dropdown中功能实现"><a href="#二十一、el-dropdown中功能实现" class="headerlink" title="二十一、el-dropdown中功能实现"></a>二十一、el-dropdown中功能实现</h1><p>在el-dropdown中有四个子条目，分别是：</p><ul><li>基本资料</li><li>更换头像</li><li>重置密码</li><li>退出登录</li></ul><p>其中其三个起到路由功能，跟左侧菜单中【个人中心】下面的二级菜单是同样的功能，退出登录需要删除本地pinia中存储的token以及userInfo</p><p><strong>路由实现：</strong></p><p>在el-dropdown-item标签上添加command属性，属性值和路由表中/user/xxx保持一致</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;User&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Crop&quot;</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;password&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;EditPen&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;logout&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;SwitchButton&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在el-dropdown标签上绑定command事件,当有条目被点击后，会触发这个事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dropdown</span> <span class="attr">placement</span>=<span class="string">&quot;bottom-end&quot;</span> @<span class="attr">command</span>=<span class="string">&quot;handleCommand&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提供handleCommand函数，参数为点击条目的command属性值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dropDown条目被点击后，回调的函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleCommand</span> = (<span class="params">command</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">if</span>(command===<span class="string">&#x27;logout&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//退出登录</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;退出登录&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//路由</span></span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&#x27;/user/&#x27;</span>+command)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>退出登录实现：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">ElMessage</span>,<span class="title class_">ElMessageBox</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useTokenStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleCommand</span> = (<span class="params">command</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (command === <span class="string">&#x27;logout&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">//退出登录</span></span><br><span class="line">        <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(</span><br><span class="line">            <span class="string">&#x27;你确认退出登录码？&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">                <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">            .<span class="title function_">then</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">                <span class="comment">//用户点击了确认</span></span><br><span class="line">                <span class="comment">//清空pinia中的token和个人信息</span></span><br><span class="line">                userInfoStore.<span class="property">info</span>=&#123;&#125;</span><br><span class="line">                tokenStore.<span class="property">token</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="comment">//跳转到登录页</span></span><br><span class="line">                router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">//用户点击了取消</span></span><br><span class="line">                <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">                    <span class="attr">message</span>: <span class="string">&#x27;取消退出&#x27;</span>,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//路由</span></span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&#x27;/user/&#x27;</span> + command)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二十二、基本资料修改"><a href="#二十二、基本资料修改" class="headerlink" title="二十二、基本资料修改"></a>二十二、基本资料修改</h1><h3 id="22-1-基本资料页面组件"><a href="#22-1-基本资料页面组件" class="headerlink" title="22.1 基本资料页面组件"></a>22.1 基本资料页面组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">username</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">nickname</span>: <span class="string">&#x27;zs&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: <span class="string">&#x27;zs@163.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> rules = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">nickname</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户昵称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;2,10&#125;$/</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>: <span class="string">&#x27;昵称必须是2-10位的非空字符串&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">email</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户邮箱&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">type</span>: <span class="string">&#x27;email&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;邮箱格式不正确&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;userInfo&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;登录名称&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.username&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户昵称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.nickname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户邮箱&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>提交修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="22-2-表单数据回显"><a href="#22-2-表单数据回显" class="headerlink" title="22.2 表单数据回显"></a>22.2 表单数据回显</h3><p>个人信息之前已经存储到了pinia中，只需要从pinia中获取个人信息，替换模板数据即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/user.js&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> userInfoStore = <span class="title function_">useUserInfoStore</span>()</span><br><span class="line"><span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123;...userInfoStore.<span class="property">info</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="22-3-接口调用"><a href="#22-3-接口调用" class="headerlink" title="22.3 接口调用"></a>22.3 接口调用</h3><p>在src/api/user.js中提供修改基本资料的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userInfoUpdateService</span> = (<span class="params">userInfo</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">put</span>(<span class="string">&#x27;/user/update&#x27;</span>,userInfo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为修改按钮绑定单击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;updateUserInfo&quot;</span>&gt;</span>提交修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提供updateUserInfo函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改用户信息</span></span><br><span class="line"><span class="keyword">import</span> &#123;userInfoUpdateService&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateUserInfo</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">userInfoUpdateService</span>(userInfo.<span class="property">value</span>)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>? result.<span class="property">message</span>:<span class="string">&#x27;修改成功&#x27;</span>)</span><br><span class="line">    <span class="comment">//更新pinia中的数据</span></span><br><span class="line">    userInfoStore.<span class="property">info</span>.<span class="property">nickname</span>=userInfo.<span class="property">value</span>.<span class="property">nickname</span></span><br><span class="line">    userInfoStore.<span class="property">info</span>.<span class="property">email</span> = userInfo.<span class="property">value</span>.<span class="property">email</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二十三、修改头像"><a href="#二十三、修改头像" class="headerlink" title="二十三、修改头像"></a>二十三、修改头像</h1><h3 id="23-1-修改头像页面组件"><a href="#23-1-修改头像页面组件" class="headerlink" title="23.1 修改头像页面组件"></a>23.1 修改头像页面组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">Plus</span>, <span class="title class_">Upload</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;@/assets/default.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> uploadRef = <span class="title function_">ref</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//用户头像地址</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> imgUrl= avatar</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-upload</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">ref</span>=<span class="string">&quot;uploadRef&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                    &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-else</span> <span class="attr">src</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">width</span>=<span class="string">&quot;278&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>  @<span class="attr">click</span>=<span class="string">&quot;uploadRef.$el.querySelector(&#x27;input&#x27;).click()&quot;</span>&gt;</span></span><br><span class="line">                    选择图片</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Upload&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span><br><span class="line">                    上传头像</span><br><span class="line">                <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.avatar-uploader</span> &#123;</span></span><br><span class="line"><span class="language-css">    :<span class="built_in">deep</span>() &#123;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.avatar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">278px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">278px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-upload</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">278px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">278px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="23-2-头像回显"><a href="#23-2-头像回显" class="headerlink" title="23.2 头像回显"></a>23.2 头像回显</h3><p>从pinia中读取用户的头像数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取用户信息</span></span><br><span class="line"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;useUserInfoStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/user.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> userInfoStore = <span class="title function_">useUserInfoStore</span>()</span><br><span class="line"><span class="keyword">const</span> imgUrl=<span class="title function_">ref</span>(userInfoStore.<span class="property">info</span>.<span class="property">userPic</span>)</span><br></pre></td></tr></table></figure><p>img标签上绑定图片地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-else</span> <span class="attr">src</span>=<span class="string">&quot;@/assets/avatar.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;278&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="23-3-头像上传"><a href="#23-3-头像上传" class="headerlink" title="23.3 头像上传"></a>23.3 头像上传</h3><p>为el-upload指定属性值，分别有：</p><ul><li>​    action: 服务器接口路径</li><li>​    headers: 设置请求头，需要携带token</li><li>​    on-success: 上传成功的回调函数</li><li>​    name: 上传图片的字段名称</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-upload</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:auto-upload</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">action</span>=<span class="string">&quot;/api/upload&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">name</span>=<span class="string">&quot;file&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:headers</span>=<span class="string">&quot;&#123;&#x27;Authorization&#x27;:tokenStore.token&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">:on-success</span>=<span class="string">&quot;uploadSuccess&quot;</span></span></span><br><span class="line"><span class="tag">           &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-else</span> <span class="attr">src</span>=<span class="string">&quot;@/assets/avatar.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;278&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提供上传成功的回调函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取token信息</span></span><br><span class="line"><span class="keyword">import</span> &#123;useTokenStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/token.js&#x27;</span></span><br><span class="line"><span class="keyword">const</span> tokenStore = <span class="title function_">useTokenStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//图片上传成功的回调</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">uploadSuccess</span> = (<span class="params">result</span>)=&gt;&#123;</span><br><span class="line">    <span class="comment">//回显图片</span></span><br><span class="line">    imgUrl.<span class="property">value</span> = result.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>外部触发图片选择</p><p>​    需要获取到el-upload组件，然后再通过$el.querySelector(‘input’)获取到el-upload对应的元素，触发click事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//获取el-upload元素</span><br><span class="line">const uploadRef = ref()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>  @<span class="attr">click</span>=<span class="string">&quot;uploadRef.$el.querySelector(&#x27;input&#x27;).click()&quot;</span>&gt;</span></span><br><span class="line">    选择图片</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="24-4-接口调用"><a href="#24-4-接口调用" class="headerlink" title="24.4 接口调用"></a>24.4 接口调用</h3><p>在user.js中提供修改头像的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改头像</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userAvatarUpdateService</span>=(<span class="params">avatarUrl</span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>();</span><br><span class="line">    params.<span class="title function_">append</span>(<span class="string">&#x27;avatarUrl&#x27;</span>,avatarUrl)</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">patch</span>(<span class="string">&#x27;/user/updateAvatar&#x27;</span>,params)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为【上传头像】按钮绑定单击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Upload&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;updateAvatar&quot;</span>&gt;</span></span><br><span class="line">    上传头像</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提供updateAvatar函数，完成头像更新</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用接口，更新头像url</span></span><br><span class="line"><span class="keyword">import</span> &#123;userAvatarUpdateService&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">ElMessage</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateAvatar</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">userAvatarUpdateService</span>(imgUrl.<span class="property">value</span>)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(result.<span class="property">message</span>? result.<span class="property">message</span>:<span class="string">&#x27;修改成功&#x27;</span>)</span><br><span class="line">    <span class="comment">//更新pinia中的数据</span></span><br><span class="line">    userInfoStore.<span class="property">info</span>.<span class="property">userPic</span>=imgUrl.<span class="property">value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue+springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue+springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS测试</title>
      <link href="/2021/03/02/2/"/>
      <url>/2021/03/02/2/</url>
      
        <content type="html"><![CDATA[<h1 id="js测试"><a href="#js测试" class="headerlink" title="js测试"></a>js测试</h1><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=474023258&&page=1&as_wide=1&high_quality=1&danmaku=0"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><div class="twopeople">    <div class="container" style="height:200px;">        <canvas class="illo" width="800" height="800" style="max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;"></canvas>    </div>    <script src="https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/twopeople1.js"></script>    <script src="https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/zdog.dist.js"></script>    <script id="rendered-js" src="https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/twopeople.js"></script>    <style>        .twopeople{            margin: 0;            align-items: center;            justify-content: center;            text-align: center;        }        canvas {            display: block;            margin: 0 auto;            cursor: move;        }    </style></div><!-- ---title: 文章标题date: 创建日期updated: 更新日期cover: 文章封面description: 文章描述swiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前--- -->]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码测试</title>
      <link href="/2016/03/30/%E5%8A%A0%E5%AF%86test/"/>
      <url>/2016/03/30/%E5%8A%A0%E5%AF%86test/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="700e8f0875bc45708b123c13483d49f271b969462a40b26e3607c69ee6c02779">165d50f05814027fb7fe5e4ae8a088d8cabf1ea2d88ccf0f53dc7b0b289f33332b05d04b2081e7aa7c6e6e64e4939284d6b290d648944c32c2a8f3f32ed9b1e7bbcb871926606c7bc866ab012964eb3947355bc0aedc4e76d3d9b2c141708d15233c6a75cf3a5b37f6a9cdc0784f3abe103595db59781c3d480bf6ffccae7720cd2ceb27c2d2729809b34e1e94da60cf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> riji </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>charts</title>
      <link href="/charts/index.html"/>
      <url>/charts/index.html</url>
      
        <content type="html"><![CDATA[<!-- 文章发布时间统计图 --><div id="posts-chart" data-start="2021-01" style="border-radius: 8px; height: 300px; padding: 10px;"></div><!-- 文章标签统计图 --><div id="tags-chart" data-length="10" style="border-radius: 8px; height: 300px; padding: 10px;"></div><!-- 文章分类统计图 --><div id="categories-chart" data-parent="true" style="border-radius: 8px; height: 300px; padding: 10px;"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/cat.css"/>
      <url>/css/cat.css</url>
      
        <content type="html"><![CDATA[body::-webkit-scrollbar {    width: 0;}.neko {    width: 64px;    height: 64px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812db74be9.png");    position: absolute;    right: 32px;    background-repeat: no-repeat;    background-size: contain;    transform: translateX(50%);    cursor: pointer;    font-family: tzy;    font-weight: 600;    font-size: 16px;    color: #6f42c1;    display: none;}.neko::after {    display: none;    width: 100px;    height: 100px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812d95e6f5.png");    background-size: contain;    z-index: 9999;    position: absolute;    right: 50%;    text-align: center;    line-height: 100px;    top: -115%;}.neko.showMsg::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko:hover::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko.fontColor::after {    color: #333;}/** * @description: 滚动条样式  跟猫二选一 */@media screen and (max-width:992px) {    ::-webkit-scrollbar {        width: 8px !important;        height: 8px !important    }    ::-webkit-scrollbar-track {        border-radius: 2em;    }    ::-webkit-scrollbar-thumb {        background-color: rgb(255 255 255 / .3);        background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);        border-radius: 2em    }    ::-webkit-scrollbar-corner {        background-color: transparent    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/readPercent.css"/>
      <url>/css/readPercent.css</url>
      
        <content type="html"><![CDATA[/* 返回顶部 */button#go-up #percent {    display: none;    font-weight: bold;    font-size: 15px !important;}button#go-up span {    font-size: 12px!important;    margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {    display: block !important;}button#go-up:hover #percent {    display: none !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  /* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}/* 字体设置 */@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'WXWK';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url('/font/霞鹜文楷.woff2');  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url('font/优设好身体.woff2');  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'TTQHB';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url('/font/甜甜圈海报字体.woff2');  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'ALBB';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url('/font/AlimamaDongFangDaKai-Regular.woff2');  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 导航栏 *//* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -35px;}/* 霓虹灯 *//* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 个人卡片 *//* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background: rgb(57, 197, 187);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}/* 页面样式调节 */:root {  --trans-light: rgba(255, 255, 255, 0.6);  --trans-dark: rgba(25, 25, 25, 0.5);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 引入图标 限制图标大小*/@import "//at.alicdn.com/t/c/font_4868511_g3jvl9qza84.css";svg.icon {  width: 1.28em;  height: 1.28em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}/* blibli视频 *//*哔哩哔哩视频适配*/.aspect-ratio {  position: relative;  width: 90%;  height: auto;  padding-bottom: 75%;  margin: 3% auto;  text-align: center;}.aspect-ratio iframe {  position: absolute;  width: 100%;  height: 86%;  left: 0;  top: 0;}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 加载动画 */.loading-img {  background: url(/img/touxiang.png) no-repeat center center;  background-size: cover;}/* 自定义右键 *//* 全局宽度 */.layout {  max-width: 1400px;}/* 侧边卡片栏宽度 */.aside-content {  max-width: 318px;  min-width: 300px;}/* 平板尺寸自适应(不启用侧边栏宽度限制) */@media screen and (max-width: 900px) {  .aside-content {    max-width: none !important;    padding: 0 5px 0 5px;  }}/* 自定义右键 *//* 右键菜单 */#rightMenu {  display: none;  position: fixed;  width: 160px;  height: fit-content;  top: 10%;  left: 10%;    /* 菜单面板背景色 */  background-color: var(--card-bg);    /* 菜单面板文字颜色 */  border: 1px solid var(--font-color);  border-radius: 8px;  z-index: 100;}#rightMenu .rightMenu-group {  padding: 7px 6px;}#rightMenu .rightMenu-group:not(:nth-last-child(1)) {  border-bottom: 1px solid var(--font-color);}#rightMenu .rightMenu-group.rightMenu-small {  display: flex;  justify-content: space-between;}#rightMenu .rightMenu-group .rightMenu-item {  height: 30px;  line-height: 30px;  border-radius: 8px;  transition: 0.3s;  color: var(--font-color);}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {  display: flex;  height: 40px;  line-height: 40px;  padding: 0 4px;}#rightMenu .rightMenu-group .rightMenu-item:hover {    /* 鼠标悬浮选项颜色 */  background-color: var(--text-bg-hover);}#rightMenu .rightMenu-group .rightMenu-item i {  display: inline-block;  text-align: center;  line-height: 30px;  width: 30px;  height: 30px;  padding: 0 5px;}#rightMenu .rightMenu-group .rightMenu-item span {  line-height: 30px;}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item * {  height: 40px;  line-height: 40px;}.rightMenu-group.hide {  display: none;}/* 头像状态 */.card-info-avatar .author-status-box {  position: absolute;  bottom: 0;  left: calc(100% - 28px);  width: 28px;  height: 28px;  border: 1px solid #d0d7de;  border-radius: 2em;  background-color: #f8f8f8f8;  transition: 0.4s;  overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {  background-color: #222222f2;  border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {  display: flex;  align-items: center;  justify-content: center;  height: 28px;  padding: 0 5px;}.card-info-avatar .author-status-box:hover {  width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {  width: 105px;  margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {  width: 0;  font-size: 12px;  height: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  transition: 0.4s;}.card-widget .card-info-avatar {  display: inline-block;  position: relative;}/* 个人信息卡片背景图 *//* [data-theme="light"] #aside-content > .card-widget.card-info {  background-image: url();  background-repeat: no-repeat;  background-attachment: inherit;  background-size: 100%;}[data-theme="dark"] #aside-content > .card-widget.card-info {  background-image: url();  background-repeat: no-repeat;  background-attachment: inherit;  background-size: 100%;} *//* 头像呼吸灯 */[data-theme="light"] .avatar-img {  animation: huxi_light 4s ease-in-out infinite;}[data-theme="dark"] .avatar-img {  animation: huxi_dark 4s ease-in-out infinite;}@keyframes huxi_light {  0% {    box-shadow: 0px 0px 1px 1px #641556;  }  50% {    box-shadow: 0px 0px 5px 5px #b9109d;  }  100% {    box-shadow: 0px 0px 1px 1px #5f024e;  }}@keyframes huxi_dark {  0% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }  50% {    box-shadow: 0px 0px 5px 5px #39c5bb;  }  100% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }}/* 波浪css */.main-hero-waves-area {  width: 100%;  position: absolute;  left: 0;  bottom: -11px;  z-index: 5;}.waves-area .waves-svg {  width: 100%;  height: 5rem;}/* Animation */.parallax > use {  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}.parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #f7f9febd;}.parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #f7f9fe82;}.parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #f7f9fe36;}.parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #f7f9fe;}/* 黑色模式背景 */[data-theme="dark"] .parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #18171dc8;}[data-theme="dark"] .parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #18171d80;}[data-theme="dark"] .parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #18171d3e;}[data-theme="dark"] .parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #18171d;}@keyframes move-forever {  0% {    transform: translate3d(-90px, 0, 0);  }  100% {    transform: translate3d(85px, 0, 0);  }}/*Shrinking for mobile*/@media (max-width: 768px) {  .waves-area .waves-svg {    height: 40px;    min-height: 40px;  }}/* 右侧滑动条 *//* 滚动条样式 */::-webkit-scrollbar {  width: 8px;  height: 8px;}::-webkit-scrollbar-track {  background-color: rgba(73, 177, 245, 0.2);  border-radius: 2em;}::-webkit-scrollbar-thumb {  background-color: var(--theme-color);  background-image: -webkit-linear-gradient(    45deg,    rgba(255, 255, 255, 0.4) 25%,    transparent 25%,    transparent 50%,    rgba(255, 255, 255, 0.4) 50%,    rgba(255, 255, 255, 0.4) 75%,    transparent 75%,    transparent  );  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: var(--theme-color);}/* 雪花 *//* 雪花特效 */[data-theme="light"] #snow{  display: block;  position: fixed;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  z-index: -2;}/* 雪花黑夜模式不显示 */[data-theme="dark"] #snow{  display: none;}/* 渐变头像框 */#aside-content > .card-widget.card-info {  background: linear-gradient(-45deg, var(--anzhiyu-main), #031764, #150136, #67044d);  background-size: 400%;  box-shadow: var(--anzhiyu-shadow-black);  animation: gradient 15s ease infinite;  position: relative;  color: var(--anzhiyu-white);}.site-data > a .headline,.site-data > a .length-num {  color: var(--anzhiyu-white);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/coin.css"/>
      <url>/css/coin.css</url>
      
        <content type="html"><![CDATA[.tip-button {    border: 0;    border-radius: 0.25rem;    cursor: pointer;    font-size: 20px;    font-weight: 600;    height: 2.6rem;    margin-bottom: -4rem;    outline: 0;    position: relative;    top: 0;    transform-origin: 0% 100%;    transition: transform 50ms ease-in-out;    width: auto;    -webkit-tap-highlight-color: transparent;  }  .tip-button:active {    transform: rotate(4deg);  }  .tip-button.clicked {    animation: 150ms ease-in-out 1 shake;    pointer-events: none;  }  .tip-button.clicked .tip-button__text {    opacity: 0;    transition: opacity 100ms linear 200ms;  }  .tip-button.clicked::before {    height: 0.5rem;    width: 60%;    background: var(button-hover-color);  }  .tip-button.clicked .coin {    transition: margin-bottom 1s linear 200ms;    margin-bottom: 0;  }  .tip-button.shrink-landing::before {    transition: width 200ms ease-in;    width: 0;  }  .tip-button.coin-landed::after {    opacity: 1;    transform: scale(1);    transform-origin: 50% 100%;  }  .tip-button.coin-landed .coin-wrapper {    background: radial-gradient(circle at 35% 97%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at 45% 92%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.02rem), radial-gradient(circle at 55% 98%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at 65% 96%, rgba(3, 16, 50, 0.4) 0.06rem, transparent 0.06rem);    background-position: center bottom;    background-size: 100%;    bottom: -1rem;    opacity: 0;    transform: scale(2) translateY(-10px);  }  .tip-button__text {    color: #fff;    margin-right: 1.8rem;    opacity: 1;    position: relative;    transition: opacity 100ms linear 500ms;    z-index: 3;  }  .tip-button::before {    border-radius: 0.25rem;    bottom: 0;    content: '';    display: block;    height: 100%;    left: 50%;    position: absolute;    transform: translateX(-50%);    transition: height 250ms ease-in-out 400ms, width 250ms ease-in-out 300ms;    width: 100%;    z-index: 2;  }  .tip-button::after {    bottom: -1rem;    color: white;    content: 'ヾ(≧O≦)〃嗷~'; /*点击后显示的内容*/    height: 110%;    left: 0;    opacity: 0;    position: absolute;    pointer-events: none;    text-align: center;    transform: scale(0);    transform-origin: 50% 20%;    transition: transform 200ms cubic-bezier(0, 0, 0.35, 1.43);    width: 100%;    z-index: 1;  }    .coin-wrapper {    background: none;    bottom: 0;    height: 18rem;    left: 0;    opacity: 1;    overflow: hidden;    pointer-events: none;    position: absolute;    transform: none;    transform-origin: 50% 100%;    transition: opacity 200ms linear 100ms, transform 300ms ease-out;    width: 100%;  }    .coin {    --front-y-multiplier: 0;    --back-y-multiplier: 0;    --coin-y-multiplier: 0;    --coin-x-multiplier: 0;    --coin-scale-multiplier: 0;    --coin-rotation-multiplier: 0;    --shine-opacity-multiplier: 0.4;    --shine-bg-multiplier: 50%;    bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);    height: 3.5rem;    margin-bottom: 3.05rem;    position: absolute;    right: calc(var(--coin-x-multiplier) * 34% + 16%);    transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(--coin-rotation-multiplier) * -1deg));    transition: opacity 100ms linear 200ms;    width: 3.5rem;    z-index: 3;  }  .coin__front, .coin__middle, .coin__back, .coin::before, .coin__front::after, .coin__back::after {    border-radius: 50%;    box-sizing: border-box;    height: 100%;    left: 0;    position: absolute;    width: 100%;    z-index: 3;  }  .coin__front {    background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%), linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%), linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(to bottom, #fcfaf9 44%, transparent 44%, transparent 65%, #fcfaf9 65%, #fcfaf9 71%, #8590b3 71%), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9 47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent 72%);    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));  }  .coin__front::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--front-y-multiplier);  }  .coin__middle {    background: #737c99;    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));  }  .coin__back {    background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%), radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent 35%);    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));  }  .coin__back::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--back-y-multiplier);  }  .coin::before {    background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent calc(var(--shine-bg-multiplier) + 0%), #e9f4ff calc(var(--shine-bg-multiplier) + 0%), transparent calc(var(--shine-bg-multiplier) + 50%));    content: '';    opacity: var(--shine-opacity-multiplier);    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier)) rotate(calc(var(--coin-rotation-multiplier) * 1deg));    z-index: 10;  }  .coin::after {    background: #737c99;    content: '';    height: 0.3181818182rem;    left: 0;    position: absolute;    top: 50%;    transform: translateY(-50%);    width: 100%;    z-index: 2;  }    @keyframes shake {    0% {      transform: rotate(4deg);    }    66% {      transform: rotate(-4deg);    }    100% {      transform: rotate();    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 10px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 4rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden;  }    .pace-inactive .pace-progress {    opacity: 0;    transition: 0.3s ease-in;  }    .pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    animation: gradient 1.5s ease infinite;    background-size: 200%;  }    .pace.pace-inactive {    opacity: 0;    transition: 0.3s;    top: -8px;  }  @keyframes gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.min.css"/>
      <url>/css/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime {    width: 180px;    margin: auto;    color: #fff;    padding-inline: 5px;    border-radius: 10px;    background-color: rgba(0, 0, 0, .7)}#workboard {    font-size: 12px}[data-theme=dark] div#runtime {    color: #28b4c8;    box-shadow: 0 0 5px rgba(28, 69, 218, .71);    animation: flashlight 1s linear infinite alternate}#ghbdages .github-badge img {    height: 20px}@-moz-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2    }    to {        box-shadow: 0 0 2px #1478d2    }}@-webkit-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2    }    to {        box-shadow: 0 0 2px #1478d2    }}@-o-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2    }    to {        box-shadow: 0 0 2px #1478d2    }}@keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2    }    to {        box-shadow: 0 0 2px #1478d2    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cat.js"/>
      <url>/js/cat.js</url>
      
        <content type="html"><![CDATA[if (document.body.clientWidth > 992) {    function getBasicInfo() {        /* 窗口高度 */        var ViewH = $(window).height();        /* document高度 */        var DocH = $("body")[0].scrollHeight;        /* 滚动的高度 */        var ScrollTop = $(window).scrollTop();        /* 可滚动的高度 */        var S_V = DocH - ViewH;        var Band_H = ScrollTop / (DocH - ViewH) * 100;        return {            ViewH: ViewH,            DocH: DocH,            ScrollTop: ScrollTop,            Band_H: Band_H,            S_V: S_V        }    };    function show(basicInfo) {        if (basicInfo.ScrollTop > 0.001) {            $(".neko").css('display', 'block');        } else {            $(".neko").css('display', 'none');        }    }    (function ($) {        $.fn.nekoScroll = function (option) {            var defaultSetting = {                top: '0',                scroWidth: 6 + 'px',                z_index: 9999,                zoom: 0.9,                borderRadius: 5 + 'px',                right: 60 + 'px',                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图                nekoImg: "https://bu.dusays.com/2022/07/20/62d812db74be9.png",                hoverMsg: "喵喵喵~",                color: "#6f42c1",                during: 500,                blog_body: "body",            };            var setting = $.extend(defaultSetting, option);            var getThis = this.prop("className") !== "" ? "." + this.prop("className") : this.prop("id") !== "" ? "#" +                this.prop("id") : this.prop("nodeName");            if ($(".neko").length == 0) {                this.after("<div class=\"neko\" id=" + setting.nekoname + " data-msg=\"" + setting.hoverMsg + "\"></div>");            }            let basicInfo = getBasicInfo();            $(getThis)                .css({                    'position': 'fixed',                    'width': setting.scroWidth,                    'top': setting.top,                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                    'z-index': setting.z_index,                    'background-color': setting.bgcolor,                    "border-radius": setting.borderRadius,                    'right': setting.right,                    'background-image': 'url(' + setting.scImg + ')',                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                    'background-size': 'contain'                });            $("#" + setting.nekoname)                .css({                    'position': 'fixed',                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                    'z-index': setting.z_index * 10,                    'right': setting.right,                    'background-image': 'url(' + setting.nekoImg + ')',                });            show(getBasicInfo());            $(window)                .scroll(function () {                    let basicInfo = getBasicInfo();                    show(basicInfo);                    $(getThis)                        .css({                            'position': 'fixed',                            'width': setting.scroWidth,                            'top': setting.top,                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                            'z-index': setting.z_index,                            'background-color': setting.bgcolor,                            "border-radius": setting.borderRadius,                            'right': setting.right,                            'background-image': 'url(' + setting.scImg + ')',                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                            'background-size': 'contain'                        });                    $("#" + setting.nekoname)                        .css({                            'position': 'fixed',                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                            'z-index': setting.z_index * 10,                            'right': setting.right,                            'background-image': 'url(' + setting.nekoImg + ')',                        });                    if (basicInfo.ScrollTop == basicInfo.S_V) {                        $("#" + setting.nekoname)                            .addClass("showMsg")                    } else {                        $("#" + setting.nekoname)                            .removeClass("showMsg");                        $("#" + setting.nekoname)                            .attr("data-msg", setting.hoverMsg);                    }                });            this.click(function (e) {                btf.scrollToDest(0, 500)            });            $("#" + setting.nekoname)                .click(function () {                    btf.scrollToDest(0, 500)                });            return this;        }    })(jQuery);    $(document).ready(function () {        //部分自定义        $("#myscoll").nekoScroll({            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效            borderRadius: '2em',            zoom: 0.9        }        );        //自定义（去掉以下注释，并注释掉其他的查看效果）        /*        $("#myscoll").nekoScroll({            nekoname:'neko1', //nekoname，相当于id            nekoImg:'img/猫咪.png', //neko的背景图片            scImg:"img/绳1.png", //绳子的背景图片            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效            zoom:0.9, //绳子长度的缩放值            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息            right:'100px', //距离页面右边的距离            fontFamily:'楷体', //对话框字体            fontSize:'14px', //对话框字体的大小            color:'#1e90ff', //对话框字体颜色            scroWidth:'8px', //绳子的宽度            z_index:100, //不用解释了吧            during:1200, //从顶部到底部滑动的时长        });        */    })}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();// 鼠标样式]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/coin.js"/>
      <url>/js/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll('.tip-button')function coinAudio() {    var coinAudio = document.getElementById("coinAudio");    if (coinAudio) {        coinAudio.play();//有音频时播放    }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach((button) => {    var coin = button.querySelector('.coin')    // The larger the number, the slower the animation    coin.maxMoveLoopCount = 90    button.addEventListener('click', () => {        if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择        if (button.clicked) return        button.classList.add('clicked')        // Wait to start flipping th coin because of the button tilt animation        setTimeout(() => {            // Randomize the flipping speeds just for fun            coin.sideRotationCount = Math.floor(Math.random() * 5) * 90            coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI            button.clicked = true            flipCoin()            coinAudio()        }, 50)    })    var flipCoin = () => {        coin.moveLoopCount = 0        flipCoinLoop()    }    var resetCoin = () => {        coin.style.setProperty('--coin-x-multiplier', 0)        coin.style.setProperty('--coin-scale-multiplier', 0)        coin.style.setProperty('--coin-rotation-multiplier', 0)        coin.style.setProperty('--shine-opacity-multiplier', 0.4)        coin.style.setProperty('--shine-bg-multiplier', '50%')        coin.style.setProperty('opacity', 1)        // Delay to give the reset animation some time before you can click again        setTimeout(() => {            button.clicked = false        }, 300)    }    var flipCoinLoop = () => {        coin.moveLoopCount++        var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount        coin.angle = -coin.maxFlipAngle * Math.pow((percentageCompleted - 1), 2) + coin.maxFlipAngle        // Calculate the scale and position of the coin moving through the air        coin.style.setProperty('--coin-y-multiplier', -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11)        coin.style.setProperty('--coin-x-multiplier', percentageCompleted)        coin.style.setProperty('--coin-scale-multiplier', percentageCompleted * 0.6)        coin.style.setProperty('--coin-rotation-multiplier', percentageCompleted * coin.sideRotationCount)        // Calculate the scale and position values for the different coin faces        // The math uses sin/cos wave functions to similate the circular motion of 3D spin        coin.style.setProperty('--front-scale-multiplier', Math.max(Math.cos(coin.angle), 0))        coin.style.setProperty('--front-y-multiplier', Math.sin(coin.angle))        coin.style.setProperty('--middle-scale-multiplier', Math.abs(Math.cos(coin.angle), 0))        coin.style.setProperty('--middle-y-multiplier', Math.cos((coin.angle + Math.PI / 2) % Math.PI))        coin.style.setProperty('--back-scale-multiplier', Math.max(Math.cos(coin.angle - Math.PI), 0))        coin.style.setProperty('--back-y-multiplier', Math.sin(coin.angle - Math.PI))        coin.style.setProperty('--shine-opacity-multiplier', 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2)        coin.style.setProperty('--shine-bg-multiplier', -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + '%')        // Repeat animation loop        if (coin.moveLoopCount < coin.maxMoveLoopCount) {            if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add('shrink-landing')            window.requestAnimationFrame(flipCoinLoop)        } else {            button.classList.add('coin-landed')            coin.style.setProperty('opacity', 0)            setTimeout(() => {                button.classList.remove('clicked', 'shrink-landing', 'coin-landed')                setTimeout(() => {                    resetCoin()                }, 300)            }, 1500)        }    }})]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/iconfont.js"/>
      <url>/js/iconfont.js</url>
      
        <content type="html"><![CDATA["use strict";function iconFont(args) {  args = args.join(" ").split(",");  let p0 = args[0];  let p1 = args[1] ? args[1] : 1;  return `<svg class="icon" style="width:${p1}em; height:${p1}em" aria-hidden="true"><use xlink:href="#${p0}"></use></svg>`;}hexo.extend.tag.register("icon", iconFont);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/randdom.js"/>
      <url>/js/randdom.js</url>
      
        <content type="html"><![CDATA[// 发现有时会和当前页面重复，加一个判断function randomPost() {    fetch('/baidusitemap.xml').then(res => res.text()).then(str => (new window.DOMParser()).parseFromString(str, "text/xml")).then(data => {        let ls = data.querySelectorAll('url loc');        while (true) {            let url = ls[Math.floor(Math.random() * ls.length)].innerHTML;            if (location.href == url) continue;            location.href = url;            return;        }    })}// 阅读文章时看了一遍写的代码，发现加个数组和一个遍历完全没必要，改成下面这个即可。// function randomPost() {//     fetch('/baidusitemap.xml').then(res => res.text()).then(str => (new window.DOMParser()).parseFromString(str, "text/xml")).then(data => {//         let ls = data.querySelectorAll('url loc');//         location.href = ls[Math.floor(Math.random() * ls.length)].innerHTML//     })// }// 旧代码// function randomPost() {    // fetch('/baidusitemap.xml').then(res => res.text()).then(str => (new window.DOMParser()).parseFromString(str, "text/xml")).then(data => {    //     let ls = data.querySelectorAll('url loc');    //     let list = [];    //     ls.forEach(i => list.push(i.innerHTML))    //     location.href = list[Math.floor(Math.random() * ls.length)]    // })// }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/rightmenu.js"/>
      <url>/js/rightmenu.js</url>
      
        <content type="html"><![CDATA[function setMask() {    //设置遮罩    if (document.getElementsByClassName("rmMask")[0] != undefined)        return document.getElementsByClassName("rmMask")[0];    mask = document.createElement('div');    mask.className = "rmMask";    mask.style.width = window.innerWidth + 'px';    mask.style.height = window.innerHeight + 'px';    mask.style.background = '#fff';    mask.style.opacity = '.0';    mask.style.position = 'fixed';    mask.style.top = '0';    mask.style.left = '0';    mask.style.zIndex = 998;    document.body.appendChild(mask);    document.getElementById("rightMenu").style.zIndex = 19198;    return mask;}function insertAtCursor(myField, myValue) {    //IE 浏览器    if (document.selection) {        myField.focus();        sel = document.selection.createRange();        sel.text = myValue;        sel.select();    }    //FireFox、Chrome等    else if (myField.selectionStart || myField.selectionStart == '0') {        var startPos = myField.selectionStart;        var endPos = myField.selectionEnd;        // 保存滚动条        var restoreTop = myField.scrollTop;        myField.value = myField.value.substring(0, startPos) + myValue + myField.value.substring(endPos, myField.value.length);        if (restoreTop > 0) {            myField.scrollTop = restoreTop;        }        myField.focus();        myField.selectionStart = startPos + myValue.length;        myField.selectionEnd = startPos + myValue.length;    } else {        myField.value += myValue;        myField.focus();    }}let rmf = {};rmf.showRightMenu = function (isTrue, x = 0, y = 0) {    let $rightMenu = $('#rightMenu');    $rightMenu.css('top', x + 'px').css('left', y + 'px');    if (isTrue) {        $rightMenu.show();    } else {        $rightMenu.hide();    }}rmf.copyWordsLink = function () {    let url = window.location.href    let txa = document.createElement("textarea");    txa.value = url;    document.body.appendChild(txa)    txa.select();    document.execCommand("Copy");    document.body.removeChild(txa);}rmf.switchReadMode = function () {    const $body = document.body    $body.classList.add('read-mode')    const newEle = document.createElement('button')    newEle.type = 'button'    newEle.className = 'fas fa-sign-out-alt exit-readmode'    $body.appendChild(newEle)    function clickFn() {        $body.classList.remove('read-mode')        newEle.remove()        newEle.removeEventListener('click', clickFn)    }    newEle.addEventListener('click', clickFn)}//复制选中文字rmf.copySelect = function () {    document.execCommand('Copy', false, null);}//回到顶部rmf.scrollToTop = function () {    document.getElementsByClassName("menus_items")[1].setAttribute("style", "");    document.getElementById("name-container").setAttribute("style", "display:none");    btf.scrollToDest(0, 500);}document.body.addEventListener('touchmove', function () {}, { passive: false });function popupMenu() {    window.oncontextmenu = function (event) {        // if (event.ctrlKey) return true;        // 当关掉自定义右键时候直接返回        if (mouseMode == "off") return true;        $('.rightMenu-group.hide').hide();        if (document.getSelection().toString()) {            $('#menu-text').show();        }        if (document.getElementById('post')) {            $('#menu-post').show();        } else {            if (document.getElementById('page')) {                $('#menu-post').show();            }        }        var el = window.document.body;        el = event.target;        var a = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\*\+,;=.]+$/        if (a.test(window.getSelection().toString()) && el.tagName != "A") {            $('#menu-too').show()        }        if (el.tagName == 'A') {            $('#menu-to').show()            rmf.open = function () {                if (el.href.indexOf("http://") == -1 && el.href.indexOf("https://") == -1 || el.href.indexOf("yisous.xyz") != -1) {                    pjax.loadUrl(el.href)                }                else {                    location.href = el.href                }            }            rmf.openWithNewTab = function () {                window.open(el.href);                // window.location.reload();            }            rmf.copyLink = function () {                let url = el.href                let txa = document.createElement("textarea");                txa.value = url;                document.body.appendChild(txa)                txa.select();                document.execCommand("Copy");                document.body.removeChild(txa);            }        } else if (el.tagName == 'IMG') {            $('#menu-img').show()            rmf.openWithNewTab = function () {                window.open(el.src);                // window.location.reload();            }            rmf.click = function () {                el.click()            }            rmf.copyLink = function () {                let url = el.src                let txa = document.createElement("textarea");                txa.value = url;                document.body.appendChild(txa)                txa.select();                document.execCommand("Copy");                document.body.removeChild(txa);            }            rmf.saveAs = function () {                var a = document.createElement('a');                var url = el.src;                var filename = url.split("/")[-1];                a.href = url;                a.download = filename;                a.click();                window.URL.revokeObjectURL(url);            }        } else if (el.tagName == "TEXTAREA" || el.tagName == "INPUT") {            $('#menu-paste').show();            rmf.paste = function () {                navigator.permissions                    .query({                        name: 'clipboard-read'                    })                    .then(result => {                        if (result.state == 'granted' || result.state == 'prompt') {                            //读取剪贴板                            navigator.clipboard.readText().then(text => {                                console.log(text)                                insertAtCursor(el, text)                            })                        } else {                            Snackbar.show({                                text: '请允许读取剪贴板！',                                pos: 'top-center',                                showAction: false,                            })                        }                    })            }        }        let pageX = event.clientX + 10;        let pageY = event.clientY;        let rmWidth = $('#rightMenu').width();        let rmHeight = $('#rightMenu').height();        if (pageX + rmWidth > window.innerWidth) {            pageX -= rmWidth + 10;        }        if (pageY + rmHeight > window.innerHeight) {            pageY -= pageY + rmHeight - window.innerHeight;        }        mask = setMask();        // 滚动消失的代码和阅读进度有冲突，因此放到readPercent.js里面了        $(".rightMenu-item").click(() => {            $('.rmMask').attr('style', 'display: none');        })        $(window).resize(() => {            rmf.showRightMenu(false);            $('.rmMask').attr('style', 'display: none');        })        mask.onclick = () => {            $('.rmMask').attr('style', 'display: none');        }        rmf.showRightMenu(true, pageY, pageX);        $('.rmMask').attr('style', 'display: flex');        return false;    };    window.addEventListener('click', function () {        rmf.showRightMenu(false);    });}if (!(navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {    popupMenu()}const box = document.documentElementfunction addLongtabListener(target, callback) {    let timer = 0 // 初始化timer    target.ontouchstart = () => {        timer = 0 // 重置timer        timer = setTimeout(() => {            callback();            timer = 0        }, 380) // 超时器能成功执行，说明是长按    }    target.ontouchmove = () => {        clearTimeout(timer) // 如果来到这里，说明是滑动        timer = 0    }    target.ontouchend = () => { // 到这里如果timer有值，说明此触摸时间不足380ms，是点击        if (timer) {            clearTimeout(timer)        }    }}addLongtabListener(box, popupMenu)// 全屏rmf.fullScreen = function () {    if (document.fullscreenElement) document.exitFullscreen();    else document.documentElement.requestFullscreen();}// 右键开关if (localStorage.getItem("mouse") == undefined) {    localStorage.setItem("mouse", "on");}var mouseMode = localStorage.getItem("mouse");function changeMouseMode() {    if (localStorage.getItem("mouse") == "on") {        mouseMode = "off";        localStorage.setItem("mouse", "off");        debounce(function () {            new Vue({                data: function () {                    this.$notify({                        title: "切换右键模式成功🍔",                        message: "当前鼠标右键已恢复为系统默认！",                        position: 'top-left',                        offset: 50,                        showClose: true,                        type: "success",                        duration: 5000                    });                }            })        }, 300);    } else {        mouseMode = "on";        localStorage.setItem("mouse", "on");        debounce(function () {            new Vue({                data: function () {                    this.$notify({                        title: "切换右键模式成功🍔",                        message: "当前鼠标右键已更换为网站指定样式！",                        position: 'top-left',                        offset: 50,                        showClose: true,                        type: "success",                        duration: 5000                    });                }            })        }, 300);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.min.js"/>
      <url>/js/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var t = new Date("04/01/2021 00:00:00");  now.setTime(now.getTime() + 250);  var e = (now - t) / 1e3 / 60 / 60 / 24,    a = Math.floor(e),    n = (now - t) / 1e3 / 60 / 60 - 24 * a,    r = Math.floor(n);  1 == String(r).length && (r = "0" + r);  var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r,    i = Math.floor(s);  1 == String(i).length && (i = "0" + i);  var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i,    l = Math.round(o);  1 == String(l).length && (l = "0" + l);  let g = "";  (g =    r < 18 && r >= 9      ? `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-上班摸鱼中.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-下班啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") &&      (document.getElementById("workboard").innerHTML = g);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/snow.js"/>
      <url>/js/snow.js</url>
      
        <content type="html"><![CDATA[if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {    // 移动端不显示} else {    // document.write('<canvas id="snow" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:-2;pointer-events:none"></canvas>');    window && (() => {        let e = {            flakeCount: 50, // 雪花数目            minDist: 150,   // 最小距离            color: "255, 255, 255", // 雪花颜色            size: 1.5,  // 雪花大小            speed: .5,  // 雪花速度            opacity: .7,    // 雪花透明度            stepsize: .5    // 步距        };        const t = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {            window.setTimeout(e, 1e3 / 60)        }            ;        window.requestAnimationFrame = t;        const i = document.getElementById("snow"),            n = i.getContext("2d"),            o = e.flakeCount;        let a = -100,            d = -100,            s = [];        i.width = window.innerWidth,            i.height = window.innerHeight;        const h = () => {            n.clearRect(0, 0, i.width, i.height);            const r = e.minDist;            for (let t = 0; t < o; t++) {                let o = s[t];                const h = a,                    w = d,                    m = o.x,                    c = o.y,                    p = Math.sqrt((h - m) * (h - m) + (w - c) * (w - c));                if (p < r) {                    const e = (h - m) / p,                        t = (w - c) / p,                        i = r / (p * p) / 2;                    o.velX -= i * e,                        o.velY -= i * t                } else                    o.velX *= .98,                        o.velY < o.speed && o.speed - o.velY > .01 && (o.velY += .01 * (o.speed - o.velY)),                        o.velX += Math.cos(o.step += .05) * o.stepSize;                n.fillStyle = "rgba(" + e.color + ", " + o.opacity + ")",                    o.y += o.velY,                    o.x += o.velX,                    (o.y >= i.height || o.y <= 0) && l(o),                    (o.x >= i.width || o.x <= 0) && l(o),                    n.beginPath(),                    n.arc(o.x, o.y, o.size, 0, 2 * Math.PI),                    n.fill()            }            t(h)        }            , l = e => {                e.x = Math.floor(Math.random() * i.width),                    e.y = 0,                    e.size = 3 * Math.random() + 2,                    e.speed = 1 * Math.random() + .5,                    e.velY = e.speed,                    e.velX = 0,                    e.opacity = .5 * Math.random() + .3            }            ;        document.addEventListener("mousemove", (e => {            a = e.clientX,                d = e.clientY        }        )),            window.addEventListener("resize", (() => {                i.width = window.innerWidth,                    i.height = window.innerHeight            }            )),            (() => {                for (let t = 0; t < o; t++) {                    const t = Math.floor(Math.random() * i.width)                        , n = Math.floor(Math.random() * i.height)                        , o = 3 * Math.random() + e.size                        , a = 1 * Math.random() + e.speed                        , d = .5 * Math.random() + e.opacity;                    s.push({                        speed: a,                        velX: 0,                        velY: a,                        x: t,                        y: n,                        size: o,                        stepSize: Math.random() / 30 * e.stepsize,                        step: 0,                        angle: 180,                        opacity: d                    })                }                h()            }            )()    }    )();}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/sun_moon.js"/>
      <url>/js/sun_moon.js</url>
      
        <content type="html"><![CDATA[function switchNightMode() {    document.querySelector('body').insertAdjacentHTML('beforeend', '<div class="Cuteen_DarkSky"><div class="Cuteen_DarkPlanet"></div></div>'),      setTimeout(function() {        document.querySelector('body').classList.contains('DarkMode') ? (document.querySelector('body').classList.remove('DarkMode'), localStorage.setItem('isDark', '0'), document.getElementById('modeicon').setAttribute('xlink:href', '#icon-moon')) : (document.querySelector('body').classList.add('DarkMode'), localStorage.setItem('isDark', '1'), document.getElementById('modeicon').setAttribute('xlink:href', '#icon-sun')),          setTimeout(function() {            document.getElementsByClassName('Cuteen_DarkSky')[0].style.transition = 'opacity 3s';            document.getElementsByClassName('Cuteen_DarkSky')[0].style.opacity = '0';            setTimeout(function() {              document.getElementsByClassName('Cuteen_DarkSky')[0].remove();            }, 1e3);          }, 2e3)      })    const nowMode = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light'    if (nowMode === 'light') {      btf.activateDarkMode()      saveToLocal.set('theme', 'dark', 2)      GLOBAL_CONFIG.Snackbar !== undefined && btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night)      document.getElementById('modeicon').setAttribute('xlink:href', '#icon-sun')    } else {      btf.activateLightMode()      saveToLocal.set('theme', 'light', 2)      document.querySelector('body').classList.add('DarkMode'), document.getElementById('modeicon').setAttribute('xlink:href', '#icon-moon')    }    // handle some cases    typeof utterancesTheme === 'function' && utterancesTheme()    typeof FB === 'object' && window.loadFBComment()    window.DISQUS && document.getElementById('disqus_thread').children.length && setTimeout(() => window.disqusReset(), 200)  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {  window.requestAnimationFrame =    window.requestAnimationFrame ||    window.mozRequestAnimationFrame ||    window.webkitRequestAnimationFrame ||    window.msRequestAnimationFrame;  var n,    e,    i,    h,    t = 0.05,    s = document.getElementById("universe"),    o = !0,    a = "180,184,240",    r = "226,225,142",    d = "226,225,224",    c = [];  function f() {    (n = window.innerWidth),      (e = window.innerHeight),      (i = 0.216 * n),      s.setAttribute("width", n),      s.setAttribute("height", e);  }  function u() {    h.clearRect(0, 0, n, e);    for (var t = c.length, i = 0; i < t; i++) {      var s = c[i];      s.move(), s.fadeIn(), s.fadeOut(), s.draw();    }  }  function y() {    (this.reset = function () {      (this.giant = m(3)),        (this.comet = !this.giant && !o && m(10)),        (this.x = l(0, n - 10)),        (this.y = l(0, e)),        (this.r = l(1.1, 2.6)),        (this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t),        (this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120)),        (this.fadingOut = null),        (this.fadingIn = !0),        (this.opacity = 0),        (this.opacityTresh = l(0.2, 1 - 0.4 * (this.comet + 1 - 1))),        (this.do = l(5e-4, 0.002) + 0.001 * (this.comet + 1 - 1));    }),      (this.fadeIn = function () {        this.fadingIn &&          ((this.fadingIn = !(this.opacity > this.opacityTresh)),          (this.opacity += this.do));      }),      (this.fadeOut = function () {        this.fadingOut &&          ((this.fadingOut = !(this.opacity < 0)),          (this.opacity -= this.do / 2),          (this.x > n || this.y < 0) && ((this.fadingOut = !1), this.reset()));      }),      (this.draw = function () {        if ((h.beginPath(), this.giant))          (h.fillStyle = "rgba(" + a + "," + this.opacity + ")"),            h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1);        else if (this.comet) {          (h.fillStyle = "rgba(" + d + "," + this.opacity + ")"),            h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1);          for (var t = 0; t < 30; t++)            (h.fillStyle =              "rgba(" +              d +              "," +              (this.opacity - (this.opacity / 20) * t) +              ")"),              h.rect(                this.x - (this.dx / 4) * t,                this.y - (this.dy / 4) * t - 2,                2,                2              ),              h.fill();        } else          (h.fillStyle = "rgba(" + r + "," + this.opacity + ")"),            h.rect(this.x, this.y, this.r, this.r);        h.closePath(), h.fill();      }),      (this.move = function () {        (this.x += this.dx),          (this.y += this.dy),          !1 === this.fadingOut && this.reset(),          (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0);      }),      setTimeout(function () {        o = !1;      }, 50);  }  function m(t) {    return Math.floor(1e3 * Math.random()) + 1 < 10 * t;  }  function l(t, i) {    return Math.random() * (i - t) + t;  }  f(),    window.addEventListener("resize", f, !1),    (function () {      h = s.getContext("2d");      for (var t = 0; t < i; t++) (c[t] = new y()), c[t].reset();      u();    })(),    (function t() {      document.getElementsByTagName("html")[0].getAttribute("data-theme") ==        "dark" && u(),        window.requestAnimationFrame(t);    })();}dark();// 星空代码]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '👀跑哪里去了~';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '🐖抓到你啦～';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
